<?php

// $Id: inquiry_design.module,v 0.1 2010/03/17 MCP $

/**
 * @file  This module provides the implementation of the Inquiry content type
 */
function inquiry_structure_widget_theme() {
  return array(
      'inquiry_structure_widget' => array(
          'arguments' => array('id' => ''),
      ),
      'inquiry_structure_widget_base_feature_table' => array(
          'arguments' => array('id' => '', 'structure' => '[]', 'launcher' => ''),
      ),
      'inquiry_structure_widget_stages_feature_table' => array(
          'arguments' => array('id' => '', 'structure' => '[]'),
      ),
      'inquiry_structure_widget_groups_feature_table' => array(
          'arguments' => array('id' => '', 'structure' => '[]'),
      ),
      'inquiry_structure_widget_roles_feature_table' => array(
          'arguments' => array('id' => '', 'structure' => '[]'),
      ),
  );
}

function inquiry_structure_widget_create_form_item(&$form, $id, $value) {
  $form[$id] = array(
      '#type' => 'hidden',
      '#required' => FALSE,
      '#default_value' => $value,
      '#prefix' => theme('inquiry_structure_widget', $id),
  );
}

function theme_inquiry_structure_widget($id) {
  nquire_commons_load_javascript_module_support();
  nquire_commons_load_nquire_widget_support();

  jquery_ui_add(array('ui.draggable', 'ui.droppable', 'ui.sortable'));

  drupal_add_js(drupal_get_path('module', 'inquiry_structure_widget') . '/js/inquiryStructureWidget.js');
  drupal_add_js(drupal_get_path('module', 'inquiry_structure_widget') . '/js/jquery.inquiryStructureWidget.js');
  drupal_add_css(drupal_get_path('module', 'inquiry_structure_widget') . '/css/inquiryStructureWidget.css');
  drupal_add_css(drupal_get_path('module', 'inquiry_structure_widget') . '/css/activityIcons.css');

  drupal_add_js(drupal_get_path('module', 'inquiry_structure_widget') . '/js/jquery.nQuireTooltip.js');
  drupal_add_css(drupal_get_path('module', 'inquiry_structure_widget') . '/css/nQuireTooltip.css');


  $output = '<p>' . t('Click on the links below to add new phases and activities. You can change the name of the activities and phases by clicking on them. They can be reorganized or deleted by dragging with the mouse. To edit the details of each activity, click \'Save\' and then \'edit\' on the desired activity.') . '</p>';

  $output .= "<div nquire-widget='inquiry-structure' data-element-name='$id'></div>";

  $output .= "<div>"
          . "<div id='inquiry-structure-add-phase'>" . t('Add phase') . "</div>"
          . "<div id='inquiry-structure-add-activity'>" . t('Add activity') . "</div>"
          . "</div>";

  return $output;
}

function theme_inquiry_structure_widget_base_feature_table($id, $structure, $launcher) {
  nquire_commons_load_javascript_module_support();
  nquire_commons_load_nquire_widget_support();

  drupal_add_js(drupal_get_path('module', 'inquiry_structure_widget') . '/js/' . $launcher . '.js');
  drupal_add_js(drupal_get_path('module', 'inquiry_structure_widget') . '/js/jquery.structureFeatureTable.js');
  drupal_add_css(drupal_get_path('module', 'inquiry_structure_widget') . '/css/inquiryStructureWidget.css');
  drupal_add_css(drupal_get_path('module', 'inquiry_structure_widget') . '/css/activityIcons.css');

  drupal_add_js(drupal_get_path('module', 'inquiry_structure_widget') . '/js/jquery.nQuireTooltip.js');
  drupal_add_css(drupal_get_path('module', 'inquiry_structure_widget') . '/css/nQuireTooltip.css');

  if (strlen($structure) === 0) {
    $output = '<p>' . t('There are no phases at all!') . '</p>';
  } else {
    $structure = json_decode($structure);

    $output = '<div>' 
    ."<div nquire-widget='inquiry-$id' data-element-name='$id' class='inquiry-feature-table-container'>" 
     . "<table class='inquiry-feature-table'><tr class='structure-feature-list'><td></td></tr>";

    foreach ($structure as $i => $phase) {
      $output .= _inquiry_structure_widget_create_item_table_row($phase, 'phase', $i);
      foreach ($phase->activities as $activity) {
        $output .= _inquiry_structure_widget_create_item_table_row($activity, 'activity', $i);
      }
    }

    $output .= '</table></div></div>';
  }

  return $output;
}

function _inquiry_structure_widget_create_item_table_row($item, $type, $phaseIndex) {
  $output = "<tr item-id='{$item->id}' type='{$type}'><td class='item-cell'>";
  $output .= "<div class='inquiry-structure-{$type} row'>";
  if ($type === 'activity') {
    $output .= "<div class='inquiry-activity-icon {$item->type}'></div>";
  } else if ($type === 'phase') {
    $output .= "<div class='inquiry-phase-icon $phaseIndex'>" . t('Phase ') . ($phaseIndex + 1) . ":&nbsp</div>";
  }
  $output .= "<div class='inquiry-{$type}-title'>{$item->title}</div>";
  
  $output .= "</div>";
  
  $output .= "</td></tr>";
  return $output;
}

function inquiry_structure_stages_table_create_form_item(&$form, $id, $structure, $value) {
  $form[$id] = array(
      '#type' => 'hidden',
      '#required' => FALSE,
      '#default_value' => $value,
      '#prefix' => theme('inquiry_structure_widget_stages_feature_table', $id, $structure),
  );
}
function theme_inquiry_structure_widget_stages_feature_table($id, $structure) {
  $output = '<p>' . t('Here you can organize phases in different stages. When the inquiry is being carried out, it will be possible at any moment to decide the active stage. In this way, access to activities can be controled in time.');
  $output .= theme('inquiry_structure_widget_base_feature_table', $id, $structure, 'structureStagesFeature');
  return $output;
}

function inquiry_structure_roles_table_create_form_item(&$form, $id, $structure, $value) {
  $form[$id] = array(
      '#type' => 'hidden',
      '#required' => FALSE,
      '#default_value' => $value,
      '#prefix' => theme('inquiry_structure_widget_roles_feature_table', $id, $structure),
  );
}
function theme_inquiry_structure_widget_roles_feature_table($id, $structure) {
  $output = '<p>' . t('Here you can create roles and assign them different permission for each activity. Later, users will be assigned to concrete roles. In this way you can control what each user can do in the inquiry activities.');
  $output .= theme('inquiry_structure_widget_base_feature_table', $id, $structure, 'structureRolesFeature');
  return $output;
}

function inquiry_structure_groups_table_create_form_item(&$form, $id, $structure, $value) {
  $form[$id] = array(
      '#type' => 'hidden',
      '#required' => FALSE,
      '#default_value' => $value,
      '#prefix' => theme('inquiry_structure_widget_groups_feature_table', $id, $structure),
  );
}

function theme_inquiry_structure_widget_groups_feature_table($id, $structure) {
  $output = '<p>' . t('Here you decide the collaboration way for the activities of each phase:') . '<ul>'
          . '<li>' . t('Individual: each participant does the activity individually.') . '</li>'
          . '<li>' . t('In group: participants form groups and collaborate to complete the activities.') . '</li>'
          . '<li>' . t('Communitary: all the participants work together in the activities.') . '</li>'
          . '</ul>';

  $output .= theme('inquiry_structure_widget_base_feature_table', $id, $structure, 'structureGroupsFeature');
  return $output;
}
