<?php

// $Id: inquiry_design.module,v 0.1 2010/03/17 MCP $

/**
 * @file  This module provides the implementation of the Inquiry content type
 */

/**
 * Implementation of _perm hook i.e. who has access to the authoring pages
 */
function inquiry_creator_perm() {
	return array('access inquiry_creator content');
}

/**
 * This implements the theme hook for inquiry_creator which defines the available theme
 * functions within this module
 * @return array of theme names and arguments
 */
function inquiry_creator_theme() {
	return array(
			'inquiry_creator_design_list' => array(
					'arguments' => array('list' => array()),
					'file' => 'inquiry_creator.list.inc',
			),
			'inquiry_creator_inquiry_metadata' => array(
					'arguments' => array('node' => NULL),
					'file' => 'inquiry_creator.edit.inc',
			),
			'inquiry_creator_inquiry_metadata_form' => array(
					'arguments' => array('form' => NULL),
					'file' => 'inquiry_creator.edit.inc',
			),
			'inquiry_creator_inquiry_main' => array(
					'arguments' => array('node' => NULL),
					'file' => 'inquiry_creator.edit.inc',
			),
			'inquiry_creator_edit_menu' => array(
					'arguments' => array('node' => NULL, 'current_op' => ''),
					'file' => 'inquiry_creator.edit.inc',
			),
			'inquiry_creator_side_form' => array(
					'arguments' => array('node' => NULL, 'item' => '', 'type' => '', 'form' => ''),
					'file' => 'inquiry_creator.edit.inc',
			),
			'inquiry_creator_show_default_roles' => array(
					'arguments' => array('node' => NULL),
					'file' => 'inquiry_creator.edit.inc',
			),
			'inquiry_creator_measure_list' => array(
					'arguments' => array('list' => array(), 'tool' => 'none'),
					'file' => 'inquiry_creator.measures.inc',
			),
	);
}

/**
 * Implementation of _menu hook which has a info page displaying a table of swim lanes
 * similar to the paper based one for authoring and a set of numbered links to define
 * elements of the inquiry i.e. the inquiry, phases, stages and activities along with
 * audience, groups and individual users who will be able to access them
 */
function inquiry_creator_menu() {
	$items = array();

	$items['creator'] = array(
			'title' => 'Inquiry Creator',
			'file' => 'inquiry_creator.list.inc',
			'page callback' => 'inquiry_creator_home',
			'type' => MENU_CALLBACK,
			'access_callback' => TRUE,
			'access arguments' => array('access inquiry_creator content'),
			'weight' => 1,
	);

	$items['creator/new'] = array(
			'title' => 'Inquiry Creator - new inquiry',
			'file' => 'inquiry_creator.edit.inc',
			'page callback' => 'inquiry_creator_new',
			'type' => MENU_CALLBACK,
			'access_callback' => TRUE,
			'access arguments' => array('access inquiry_creator content'),
			'weight' => 1,
	);

	$items['creator/%'] = array(
			'title' => 'Inquiry Creator - inquiry view',
			'file' => 'inquiry_creator.edit.inc',
			'page callback' => 'inquiry_creator_main',
			'page arguments' => array(1, 2),
			'type' => MENU_CALLBACK,
			'access_callback' => TRUE,
			'access arguments' => array('access inquiry_creator content'),
			'weight' => 1,
	);

	$items['creator/%/edit'] = array(
			'title' => 'Inquiry Creator - inquiry edit',
			'file' => 'inquiry_creator.edit.inc',
			'page callback' => 'inquiry_creator_edit',
			'page arguments' => array(1),
			'type' => MENU_CALLBACK,
			'access_callback' => TRUE,
			'access arguments' => array('access inquiry_creator content'),
			'weight' => 1,
	);

	$items['creator/%/phase/%'] = array(
			'title' => 'Edit phase',
			'file' => 'inquiry_creator.phases.inc',
			'page callback' => 'inquiry_creator_phase_edit',
			'page arguments' => array(1, 3),
			'type' => MENU_CALLBACK,
			'access_callback' => TRUE,
			'access arguments' => array('access inquiry_creator content'),
			'weight' => 1,
	);
	$items['creator/%/phase/%/delete'] = array(
			'title' => 'Edit phase',
			'file' => 'inquiry_creator.phases.inc',
			'page callback' => 'inquiry_creator_phase_delete',
			'page arguments' => array(1, 3),
			'type' => MENU_CALLBACK,
			'access_callback' => TRUE,
			'access arguments' => array('access inquiry_creator content'),
			'weight' => 1,
	);

	$items['creator/%/activity/%'] = array(
			'title' => 'Edit activity',
			'file' => 'inquiry_creator.activities.inc',
			'page callback' => 'inquiry_creator_activity_edit',
			'page arguments' => array(1, 3),
			'type' => MENU_CALLBACK,
			'access_callback' => TRUE,
			'access arguments' => array('access inquiry_creator content'),
			'weight' => 1,
	);
	$items['creator/%/activity/%/delete'] = array(
			'title' => 'Delete activity',
			'file' => 'inquiry_creator.activities.inc',
			'page callback' => 'inquiry_creator_activity_delete',
			'page arguments' => array(1, 3),
			'type' => MENU_CALLBACK,
			'access_callback' => TRUE,
			'access arguments' => array('access inquiry_creator content'),
			'weight' => 1,
	);

	$items['creator/%/activity/%/measure/add'] = array(
			'title' => 'Add new measure',
			'file' => 'inquiry_creator.measures.inc',
			'page callback' => 'inquiry_creator_measure_add',
			'page arguments' => array(1, 3),
			'type' => MENU_CALLBACK,
			'access_callback' => TRUE,
			'access arguments' => array('access inquiry_creator content'),
			'weight' => 1,
	);
	$items['creator/%/activity/%/measure/%'] = array(
			'title' => 'Edit measure',
			'file' => 'inquiry_creator.measures.inc',
			'page callback' => 'inquiry_creator_measure_edit',
			'page arguments' => array(1, 3, 5),
			'type' => MENU_CALLBACK,
			'access_callback' => TRUE,
			'access arguments' => array('access inquiry_creator content'),
			'weight' => 1,
	);
	$items['creator/%/activity/%/measure/%/delete'] = array(
			'title' => 'Edit measure',
			'file' => 'inquiry_creator.measures.inc',
			'page callback' => 'inquiry_creator_measure_delete',
			'page arguments' => array(1, 3, 5),
			'type' => MENU_CALLBACK,
			'access_callback' => TRUE,
			'access arguments' => array('access inquiry_creator content'),
			'weight' => 1,
	);

	return $items;
}

function inquiry_creator_activity_form(&$form_state, $design, $node) {
	module_load_include('inc', 'inquiry_creator', 'inquiry_creator.activities');
	return _inquiry_creator_activity_form($form_state, $design, $node);
}

function inquiry_creator_add_measures_form_links($measures_data, $current_tool, &$form, $base_path) {
	module_load_include('inc', 'inquiry_creator', 'inquiry_creator.measures');
	_inquiry_creator_add_measures_form_links($measures_data, $current_tool, $form, $base_path);
}

function inquiry_creator_delete_measure_node($nid) {
	module_load_include('inc', 'inquiry_creator', 'inquiry_creator.measures');
	return _inquiry_creator_measure_delete_node($nid);
}

function inquiry_creator_get_inquiry_structure($nid) {
	$inquiry_info = pi_info()->getInquiryInfo($nid);
	$structure = array();

	foreach ($inquiry_info->getPhases() as $phase_nid => $phase) {
		$p = new stdClass();
		$p->id = $phase_nid;
		$p->title = check_plain($phase->title);
		$p->activities = array();

		foreach ($inquiry_info->getActivitiesForPhase($phase_nid) as $activity_nid => $activity) {
			$a = new stdClass();
			$a->id = $activity_nid;
			$a->title = check_plain($activity->title);
			$a->type = $activity->activity_type;

			$p->activities[] = $a;
		}
		$structure[] = $p;
	}

	return $structure;
}

function inquiry_creator_create_activity_stub($phase_nid, $type, $title, $weight) {
	global $user;

	$node = new stdClass();
	$node->type = 'pi_activity';
	$node->activity_type = $type;
	$node->title = $title;
	$node->uid = $user->uid;
	$node->script_activity = TRUE;
	$node->phase_nid = $phase_nid;
	$node->weight = $weight;

	node_save($node);

	inquiry_available_features_invoke('activity', 'create_activity', $node);
	return $node;
}

function inquiry_creator_update_children_activities_phase($parent_nid, $phase_nid) {
	$nodes = pi_activity_get_children_activities($parent_nid, FALSE);
	foreach ($nodes as $node) {
		$node->phase_nid = $phase_nid;
		node_save($node);
	}
}

function inquiry_creator_create_activity_child($parent_node, $type, $title, $parameters = NULL) {
	$node = new stdClass();
	$node->type = 'pi_activity';
	$node->activity_type = $type;
	$node->uid = $parent_node->uid;
	$node->phase_nid = $parent_node->phase_nid;
	$node->parent_activity = $parent_node->nid;
	$node->script_activity = TRUE;
	$node->title = $title;
	$node->body = '';

	if ($parameters) {
		foreach ($parameters as $k => $v) {
			$node->$k = $v;
		}
	}

	node_save($node);
	return $node;
}

function inquiry_creator_create_phase_stub($inquiry_nid, $title, $weight) {
	global $user;

	$node = new stdClass();
	$node->type = 'pi_phase';
	$node->inquiry_nid = $inquiry_nid;
	$node->title = $title;
	$node->uid = $user->uid;
	$node->collaboration = 'individual';
	$node->weight = $weight;

	node_save($node);
	return $node;
}