<?php
// $Id: pi_key_questions.module,v 1.1 2009/06/11 09:55:10 ou_mbg Exp $

/**
 * @file
 * Module for creating "key questions" node type
 */

/**
 * Implementation of pi_key_questions_node_info().
 */
function pi_key_questions_node_info() {
 return array(
    'pi_key_questions' => array(
      'name' => t('Key questions'), // Required.
      'module' => 'pi_key_questions',  // Required.
      'description' => t('What key questions do you want to answer?'), // Required.
      'has_title' => TRUE,
      'title_label' => t('Name'),
      'has_body' => TRUE,
      'body_label' => t('Description'),
      'min_word_count' => 2,
      'locked' => TRUE
    )
  );
}

/**
 * Implementation of pi_key_questions_perm().
 */

function pi_key_questions_perm() {
}

/**
 * Implementation of pi_key_questions_access().
 */

function pi_key_questions_access($op, $node) {
  global $user;
  $details = get_inquiry_details_from_current_path();
  if ($op == 'create') {
    return check_node_function_of_activity ($details->inquiry_id, $details->activity_id, $user->uid, 'add');
  }
  if ($op == 'update' || $op == 'delete') {
    return check_node_function_of_activity ($details->inquiry_id, $details->activity_id, $user->uid, 'edit');
  }
}

/**
 * Implementation of pi_key_questions_form().
 */
function pi_key_questions_form(&$node) {

  $details = get_inquiry_details_from_current_path();
  $current_activity = load_activity($details->activity_id);
  if ($current_activity->name) {
  	drupal_set_title(t($current_activity->name));
  }
  else {
  	drupal_set_title("Key questions");
  }
  if ($current_activity->description) {
  	$prefix .= "<p>" . t($current_activity->description) . "</p>";
  }
  else {
  	$prefix .= "<p>Enter a key question</p>";
  }

  // Get metadata for this node type
  // (we use it for labeling title and body fields).
  // We defined this in pi_key_questions_node_info().
  $type = node_get_types('type', $node);
  
  $form['title'] = array(
    '#type' => 'hidden',
    '#title' => t("Key question"),
    '#required' => FALSE,
    '#default_value' => 'New interview',
  );

  $form['key_question'] = array(
    '#type' => 'textarea',
    '#title' => t('Key question'),
    '#description' => t('Enter a key question for your inquiry.'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#weight' => -10
  );
  
  $form['inquiry_id'] = array(
    '#type' => 'hidden',
    '#value' => t($details->inquiry_id)
  );
  
  $form['#prefix'] = $prefix;
  
  return $form;
}

/**
 * Implementation of pi_key_questions_validate().
 */
function pi_key_questions_validate($node) {
}

/**
 * Implementation of pi_key_questions_insert().
 */

function pi_key_questions_insert($node) {
	$query = "INSERT INTO pi_key_questions (nid, inquiry_id, key_question) VALUES ('" . $node->nid . "', '" . $node->inquiry_id . "', '" . $node->key_question . "') ";
	db_query($query);
}

/**
 * Implementation of pi_key_questions_update().
 */
function pi_key_questions_update($node) {
	$query = "DELETE FROM pi_key_questions WHERE nid = " . $node->nid . " ";
	db_query($query);
	pi_data_insert($node);
}

/**
 * Implementation of pi_key_questions_delete().
 */
function pi_key_questions_delete(&$node) {
  // Delete the related information we were saving for this node.
  db_query('DELETE FROM pi_key_questions WHERE nid = %d', $node->nid);
}

/**
 * Implementation of pi_key_questions_load().
 */
function pi_key_questions_load($node) {
  // drupal_add_js('misc/collapse.js');
  return db_fetch_object(db_query('SELECT * FROM pi_key_questions WHERE nid = %d',
    $node->nid));
}

/**
 * Implementation of hook_view().
 */
function pi_key_questions_view($node, $teaser = FALSE, $page = FALSE) {
  if (!$teaser) {
    // Use Drupal's default node view.
    $node = node_prepare($node, $teaser);

    $node->content['pi_key_questions'] = array(
      '#value' => theme('pi_key_questions', $node),
      '#weight' => 2
      );
  }

  if ($teaser) {
    // Use Drupal's default node view.
    $node = node_prepare($node, $teaser);
  }

  return $node;
}

function pi_key_questions_theme() {
  return array(
    'pi_key_questions' => array(
      'arguments' => array('node'),
    ),
  );
}


function theme_pi_key_questions($node) {
  $output = t('<p><strong>Key question: </strong>' . $node->key_question . "</p>");
  return $output;
}

















