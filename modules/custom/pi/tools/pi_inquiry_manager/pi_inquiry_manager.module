<?php

function pi_inquiry_manager_block($op = 'list') {
  switch ($op) {
    case 'list':
      $blocks = array();
      $blocks[0]['info'] = t('Inquiry management');
      return $blocks;

    case 'view':
      global $user;

      $node_details = get_inquiry_details_from_current_path();
      $inquiry_id = isset($node_details->inquiry_id) ? $node_details->inquiry_id : FALSE;
      $inquiry = node_load($inquiry_id);

      if ($inquiry && $inquiry->type === 'pi_inquiry') {
        $tools = array();

        $tools[] = t('Stages');
        $tools[] = l(t('Participants'), "inquiry/$inquiry_id/participants");
        $tools[] = t('Activity status');

        if ($user->uid === $inquiry->uid) {
          $path = inquiry_design_path_to_inquiry_design($inquiry_id);
          if ($path) {
            $tools[] = l(t('Edit inquiry'), $path);
          }
        }

        $content = t(theme('item_list', $tools, NULL, 'ul', array('class' => 'menu')));

        return array(
            'subject' => t('Inquiry management'),
            'content' => $content
        );
      }
      return NULL;
  }
}

function pi_inquiry_manager_menu() {
  $items = array(
      'inquiry/%/participants' => array(
          'title' => 'Inquiry participant',
          'file' => 'pi_inquiry_manager.participants.inc',
          'page callback' => 'pi_inquiry_manager_participants',
          'page arguments' => array(1),
          'type' => MENU_CALLBACK,
          'access callback' => 'pi_inquiry_manager_participants_access',
          'access arguments' => array(1),
          'weight' => 1,
      ),
      'inquiry/%/participants/access' => array(
          'title' => 'Participant access configuration',
          'file' => 'pi_inquiry_manager.participants.inc',
          'page callback' => 'pi_inquiry_manager_participants_edit_inquiry_group',
          'page arguments' => array(1),
          'type' => MENU_CALLBACK,
          'access callback' => 'pi_inquiry_manager_participants_group_edit_access',
          'access arguments' => array(1),
          'weight' => 1,
      ),
  );

  return $items;
}

function pi_inquiry_manager_theme() {
  return array(
      'pi_inquiry_manager_participants_view_inquiry_group' => array(
          'arguments' => array('node'),
          'file' => 'pi_inquiry_manager.participants.inc'
      ),
  );
}

function pi_inquiry_manager_participants_access($nid) {
  /* TODO */

  return TRUE;
}

function pi_inquiry_manager_participants_group_edit_access($inquiry_nid) {
  global $user;
  $node = node_load($inquiry_nid);
  return $node->uid === $user->uid;
}
