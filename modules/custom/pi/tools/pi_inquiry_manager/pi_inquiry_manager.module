<?php

function pi_inquiry_manager_block($op = 'list') {
	switch ($op) {
		case 'list':
			$blocks = array();
			$blocks[0]['info'] = t('Inquiry management');
			return $blocks;

		case 'view':
			global $user;

			$node_details = get_inquiry_details_from_current_path();
			$inquiry_id = isset($node_details->inquiry_id) ? $node_details->inquiry_id : FALSE;
			$inquiry = node_load($inquiry_id);

			if ($inquiry && $inquiry->type === 'pi_inquiry') {
				$tools = array();

				$tools[] = t('Stages');
				$tools[] = l(t('Participants'), "inquiry/$inquiry_id/participants");
				$tools[] = t('Activity status');

				if ($user->uid === $inquiry->uid) {
					$path = inquiry_design_path_to_inquiry_design($inquiry_id);
					if ($path) {
						$tools[] = l(t('Edit inquiry'), $path);
					}
				}

				$content = t(theme('item_list', $tools, NULL, 'ul', array('class' => 'menu')));

				return array(
						'subject' => t('Inquiry management'),
						'content' => $content
				);
			}
			return NULL;
	}
}

function pi_inquiry_manager_menu() {
	$items = array(
			'inquiry/%/participants' => array(
					'title' => 'Inquiry participant',
					'file' => 'pi_inquiry_manager.participants.inc',
					'page callback' => 'pi_inquiry_manager_participants',
					'page arguments' => array(1),
					'type' => MENU_CALLBACK,
					'access callback' => 'pi_inquiry_manager_participants_access',
					'access arguments' => array(1),
					'weight' => 1,
			),
			'inquiry/%/participants/access' => array(
					'title' => 'Participant access configuration',
					'file' => 'pi_inquiry_manager.participants.inc',
					'page callback' => 'pi_inquiry_manager_participants_edit_inquiry_group',
					'page arguments' => array(1),
					'type' => MENU_CALLBACK,
					'access callback' => 'pi_inquiry_manager_participants_group_configure_inquiry_participants_access',
					'access arguments' => array(1),
					'weight' => 1,
			),
			'inquiry/%/participants/join' => array(
					'title' => 'Join inquiry',
					'file' => 'pi_inquiry_manager.participants.inc',
					'page callback' => 'pi_inquiry_manager_participants_group_join',
					'page arguments' => array(1),
					'type' => MENU_CALLBACK,
					'access callback' => 'pi_inquiry_manager_participants_group_join_access',
					'access arguments' => array(1),
					'weight' => 1,
			),
			'inquiry/%/participants/leave' => array(
					'title' => 'Leave inquiry',
					'file' => 'pi_inquiry_manager.participants.inc',
					'page callback' => 'pi_inquiry_manager_participants_group_leave',
					'page arguments' => array(1),
					'type' => MENU_CALLBACK,
					'access callback' => 'pi_inquiry_manager_participants_group_leave_access',
					'access arguments' => array(1),
					'weight' => 1,
			),
			'inquiry/%/participants/invite' => array(
					'title' => 'Invite users',
					'file' => 'pi_inquiry_manager.participants.inc',
					'page callback' => 'pi_inquiry_manager_participants_group_invite_users',
					'page arguments' => array(1, 4),
					'type' => MENU_CALLBACK,
					'access callback' => 'pi_inquiry_manager_participants_group_manageuser_access',
					'access arguments' => array(1),
					'weight' => 1,
			),
			'inquiry/%/participants/acceptinvitation' => array(
					'title' => 'Accept invitation',
					'file' => 'pi_inquiry_manager.participants.inc',
					'page callback' => 'pi_inquiry_manager_participants_group_acceptinvitation',
					'page arguments' => array(1, 4),
					'type' => MENU_CALLBACK,
					'access callback' => 'pi_inquiry_manager_participants_group_acceptinvitation_access',
					'access arguments' => array(1),
					'weight' => 1,
			), 'inquiry/%/participants/accept/%' => array(
					'title' => 'Accept user',
					'file' => 'pi_inquiry_manager.participants.inc',
					'page callback' => 'pi_inquiry_manager_participants_group_accept_user',
					'page arguments' => array(1, 4, 5),
					'type' => MENU_CALLBACK,
					'access callback' => 'pi_inquiry_manager_participants_group_manageuser_access',
					'access arguments' => array(1),
					'weight' => 1,
			),
			'inquiry/%/participants/reject/%' => array(
					'title' => 'Reject user',
					'file' => 'pi_inquiry_manager.participants.inc',
					'page callback' => 'pi_inquiry_manager_participants_group_reject_user',
					'page arguments' => array(1, 4, 5),
					'type' => MENU_CALLBACK,
					'access callback' => 'pi_inquiry_manager_participants_group_manageuser_access',
					'access arguments' => array(1),
					'weight' => 1,
			),
	);

	return $items;
}

function pi_inquiry_manager_theme() {
	return array(
			'pi_inquiry_manager_participants_view_inquiry_group' => array(
					'arguments' => array('node'),
					'file' => 'pi_inquiry_manager.participants.inc'
			),
			'pi_inquiry_manager_participants_list' => array(
					'arguments' => array('group_nid', 'uid'),
					'file' => 'pi_inquiry_manager.participants.inc'
			),
			'pi_inquiry_manager_participants_group_status_and_options' => array(
					'arguments' => array('group_nid', 'uid'),
					'file' => 'pi_inquiry_manager.participants.inc'
			),
	);
}

function pi_inquiry_manager_participants_access($nid) {
	/* TODO */

	return TRUE;
}

function pi_inquiry_manager_participants_group_configure_inquiry_participants_access($inquiry_nid) {
	global $user;
	$node = node_load($inquiry_nid);
	return $node->uid === $user->uid;
}

/* group operation access */

function pi_inquiry_manager_participants_group_join_access($inquiry_nid, $group_nid = FALSE) {
	global $user;

	$inquiry = node_load($inquiry_nid);
	if ($inquiry->type === 'pi_inquiry') {
		$g = pi_inquiry_groupings_get_group_nid($inquiry, $group_nid);

		if ($g) {
			$allowed_participants = $group_nid ? pi_inquiry_groupings_get_group_member_uids($inquiry->actor_gid) : pi_inquiry_groupings_get_allowed_participants_for_inquiry($inquiry);

			if (!$allowed_participants || in_array($user->uid, $allowed_participants)) {
				$og = node_load($g);
				og_load_group($og);
				if ($og->og_selective == OG_OPEN || $og->og_selective == OG_MODERATED) {
					return TRUE;
				}
			}
		}
	}

	return FALSE;
}

function pi_inquiry_manager_participants_group_acceptinvitation_access($inquiry_nid, $group_nid = FALSE) {
	global $user;

	$inquiry = node_load($inquiry_nid);
	if ($inquiry->type === 'pi_inquiry') {
		$g = pi_inquiry_groupings_get_group_nid($inquiry, $group_nid);

		if ($g) {
			$og = node_load($g);
			og_load_group($og);
			if ($og->og_selective == OG_INVITE_ONLY && pi_inquiry_groupings_get_user_status_in_group($g, $user->uid)) {
				return TRUE;
			}
		}
	}

	return FALSE;
}

function pi_inquiry_manager_participants_group_leave_access($inquiry_nid, $group_nid = FALSE) {
	global $user;

	$inquiry = node_load($inquiry_nid);
	if ($inquiry->type === 'pi_inquiry') {
		$g = pi_inquiry_groupings_get_group_nid($inquiry, $group_nid);

		if ($g) {
			$og = node_load($g);
			og_load_group($og);
			return $og->uid !== $user->uid;
		}
	}

	return FALSE;
}

function pi_inquiry_manager_participants_group_manageuser_access($inquiry_nid, $group_nid = FALSE) {
	global $user;

	$inquiry = node_load($inquiry_nid);
	if ($inquiry->type === 'pi_inquiry') {
		$g = pi_inquiry_groupings_get_group_nid($inquiry, $group_nid);

		if ($g) {
			$og = node_load($g);
			og_load_group($og);
			return $user->uid === $og->uid;
		}
	}
	return FALSE;
}

