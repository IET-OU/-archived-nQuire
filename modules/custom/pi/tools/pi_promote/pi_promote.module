<?php

define('PI_PROMOTE_NONE', 0);
define('PI_PROMOTE_SELECTED', 1);
define('PI_PROMOTE_REQUESTED', 2);

function pi_promote_menu() {
  $items = array();



  $items['home'] = array(
      'title' => 'Home',
      'page callback' => 'pi_promote_shop_page',
      'type' => MENU_NORMAL_ITEM,
      'access callback' => 'pi_promote_shop_page_callback',
  );

  $items['admin/nquire/promote'] = array(
      'title' => 'Promoted inquiries',
      'page callback' => 'pi_promote_admin_page',
      'access arguments' => array('configure nquire'),
      'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/nquire/news'] = array(
      'title' => 'Select news',
      'page callback' => 'pi_promote_admin_news',
      'access arguments' => array('configure nquire'),
      'type' => MENU_NORMAL_ITEM,
  );


  return $items;
}

function pi_promote_front_page() {
  drupal_goto('home');
}

function pi_promote_shop_page() {
  drupal_add_css(drupal_get_path('module', 'pi_promote') . '/css/pi_promote_shop.css');

  $inquiries = array();

  $query = "SELECT inquiry_id FROM {pi_promote} WHERE status=%d ORDER BY weight";
  $result = db_query($query, PI_PROMOTE_SELECTED);
  while ($row = db_fetch_array($result)) {
    if ($row['inquiry_id'] == 0) {
      $access = user_access('access inquiry_creator content');
      $inquiries[] = array(
          'path' => $access ? 'creator' : 'user',
          'title' => t('Inquiry creator'),
          'image' => url(drupal_get_path('module', 'pi_promote') . '/images/editor.png', array('absolute' => TRUE)),
          'info' => $access ? t('Create new inquiries.') : t('<a href="!u1">Login</a> or <a href="!u2">register</a> to access.', array(
                      '!u1' => url('user'),
                      '!u2' => url('user/register'),
                  )),
      );
    }
    $inquiry = node_load($row['inquiry_id']);
    if ($inquiry) {
      $member_count = count(nquire_group_get_member_uids($inquiry->actor_gid, TRUE));
      $info = $member_count === 1 ? t('One member') : t('!n members.', array('!n' => $member_count));

      $inquiries[] = array(
          'path' => "inquiry/{$inquiry->nid}",
          'title' => check_plain($inquiry->title),
          'info' => $info,
          'image' => file_create_url($inquiry->image),
      );
    }
  }

  $default_image = base_path() . drupal_get_path('module', 'pi_promote') . '/images/default.png';

  $max_width = 290;
  $max_height = 165;
  $aspect_ratio = $max_width / $max_height;

  $output = "";

  $output .= '<div class="pi_logos_bar">'
          . '<a href="http://www.nominettrust.org.uk/" target="_blank"><img src="' . base_path() . drupal_get_path('module', 'pi_promote') . '/images/nt.jpg' . '"/></a>'
          . '<a href="https://learn5.open.ac.uk/course/view.php?id=2" target="_blank"><img class="pi_logos_center" src="' . base_path() . drupal_get_path('module', 'pi_promote') . '/images/osl.jpg' . '"/></a>'
          . '<a href="http://www.open.ac.uk/" target="_blank"><img src="' . base_path() . drupal_get_path('module', 'pi_promote') . '/images/ou.jpg' . '"/></a>'
          . '</div>';

  $output .= '<div class="pi_promote_main"><div class="pi_promote_fixed_width_container">';

  $output .= '<div class="pi_promote_shop">';
  for ($i = 0; $i < count($inquiries);) {
    $output .= '<div class="pi_promote_shop_row"><div class="pi_promote_shop_row_inner">';
    for ($j = 0; $j < 2; $j++, $i++) {
      if ($i < count($inquiries)) {
        $inquiry = $inquiries[$i];
        $url = $inquiry['path'] ? url($inquiry['path']) : FALSE;
        $title = $inquiry['path'] ? l($inquiry['title'], $inquiry['path']) : $inquiry['title'];

        if ($inquiry['image']) {
          $image = $inquiry['image'];
          $size = getimagesize($image);
          $ar = $size[0] / $size[1];
          if ($ar > $aspect_ratio) {
            $scale = $max_width / $size[0];
            $w = $max_width;
            $h = $size[1] * $scale;
            $px = 0;
            $py = .5 * ($max_height - $h);
          } else {
            $scale = $max_height / $size[1];
            $h = $max_height;
            $w = $size[0] * $scale;
            $px = .5 * ($max_width - $w);
            $py = 0;
          }
          $image_style = "width:{$w}px;height:{$h}px;top:{$py}px;left:{$px}px";
        } else {
          $image = $default_image;
          $image_style = '';
        }

        $output .= '<div class="pi_promote_shop_item">'
                . '<div class="pi_promote_shop_item_image">';
        if ($url) {
          $output .= '<a href="' . $url . '">';
        }
        $output .= '<img src="' . $image . '" style="' . $image_style . '"></img>';
        if ($url) {
          $output .= '</a>';
        }

        $output .= '</div>'
                . '<div class="pi_promote_shop_item_title">' . $title . '</div>'
                . '<div class="pi_promote_shop_item_info">' . $inquiry['info'] . '</div>'
                . '</div>';
      } else {
        $output .= '<div class="pi_promote_shop_item">'
                . '</div>';
      }
    }
    $output .= '</div></div>';
  }

  $news = array();

  $news_result = db_query("SELECT node.nid FROM {node} LEFT JOIN {pi_promote_news} ON node.nid=pi_promote_news.news_id WHERE pi_promote_news.selected=1 ORDER BY pi_promote_news.weight ASC");
  while ($row = db_fetch_array($news_result)) {
    $node = node_load($row['nid']);
    $teaser_pos = strpos($node->body, '<!--break-->');
    if ($teaser_pos === FALSE) {
      $teaser_text = $node->body;
    } else {
      $teaser_pos_2 = strpos($node->body, '<!--break-->', $teaser_pos + 1);
      if ($teaser_pos_2 === FALSE) {
        $teaser_text = substr($node->body, 0, $teaser_pos);
      } else {
        $teaser_text = substr($node->body, $teaser_pos, $teaser_pos_2 - $teaser_pos);
      }
    }

    $body = strip_tags(nl2br($teaser_text)); // nl2br(check_plain());
    $news[] = array(check_plain($node->title), $body, format_date($node->created, 'small'), $row['nid']);
  }

  $output .= '</div>'
          . '<div class="pi_promote_links"><div class="p_promote_links_head">' . t('News') . '</div>';


  $output .= implode('', array_map(function($l) {
            return '<div class="pi_promote_links_title">' . $l[0] . '</div><div class="pi_promote_links_body">' . $l[1] . '</div><div class="pi_promote_links_read">'
                    . $l[2] . '&nbsp;&nbsp;&nbsp;' . l(t('Read'), 'node/' . $l[3]) . '</div>';
          }, $news));

  $output .= '<div class="p_promote_links_head" style="padding-top:10px;">' . t('Recent activity') . '</div>';
  $output .= pi_feeds_recent_activity();


  $output .= '</div></div></div>';

  return $output;
}

function pi_promote_shop_page_callback() {
  return TRUE;
}

function pi_promote_admin_page() {
  drupal_add_js(drupal_get_path('module', 'pi_promote') . '/js/pi_promote_inquiry_admin.js');
  $output = drupal_get_form('pi_promote_admin_form');
  return $output;
}

function pi_promote_admin_form(&$form_state) {

  $form = array(
      'inquiries' => array(
          '#prefix' => '<ul class="item-list">',
          '#suffix' => '</ul>',
          '#tree' => TRUE,
      ),
  );

  $options = array(0 => t('Not shown'));
  for ($i = 1; $i <= 10; $i++) {
    $options[$i] = t('Position: !p', array('!p' => $i));
  }

  $query = "SELECT inquiry_id, status, weight FROM {pi_promote} WHERE status>0 ORDER BY status, weight";
  $result = db_query($query);

  while ($row = db_fetch_array($result)) {
    $id = FALSE;
    if ($row['inquiry_id'] == 0) {
      $id = 0;
      $title = t('Authoring tool');
    } else {
      $inquiry = node_load($row['inquiry_id']);
      if ($inquiry && $inquiry->type === 'pi_inquiry') {
        $id = $inquiry->nid;
        $title = check_plain($inquiry->title);
      }
    }

    if ($id !== FALSE) {
      $value = $row['status'] == PI_PROMOTE_SELECTED ? $row['weight'] : 0;
      $form['inquiries'][$id] = array(
          '#prefix' => '<li class="inquiry_item_selector"><b>' . $title . '</b>',
          '#type' => 'select',
          '#suffix' => '</li>',
          '#options' => $options,
          '#default_value' => $value,
      );
    }
  }

  nquire_commons_create_form_save_cancel_buttons($form, 'pi_promote_admin_form_submit', "admin/nquire/promote");

  return $form;
}

function pi_promote_admin_form_submit($form, $form_state) {
  foreach ($form_state['values']['inquiries'] as $inquiry_nid => $weight) {
    _pi_promote_set_value($inquiry_nid, $weight ? PI_PROMOTE_SELECTED : PI_PROMOTE_REQUESTED, $weight);
  }
}

function _pi_promote_set_value($inquiry_nid, $status, $weight = 0) {
  $query = "INSERT INTO pi_promote (inquiry_id, status, weight) VALUES (%d, %d, %d) ON DUPLICATE KEY UPDATE status=%d, weight=%d";
  db_query($query, $inquiry_nid, $status, $weight, $status, $weight);
}

function _pi_promote_set_rating($inquiry_nid, $uid, $rating) {
  $query = "INSERT INTO pi_promote_ratings (inquiry_id, uid, rating) VALUES (%d, %d, %d) ON DUPLICATE KEY UPDATE rating=%d";
  $_rating = min(5, max(1, intval($rating)));
  db_query($query, $inquiry_nid, $uid, $_rating, $_rating);
}

function pi_promote_inquiry_rating($inquiry_nid) {
  $query = "SELECT AVG(rating) as r, COUNT(rating) as n FROM {pi_promote_ratings} WHERE inquiry_id=%d";
  $row = db_fetch_array(db_query($query, $inquiry_nid));
  return $row && $row['n'] ? $row : FALSE;
}

function pi_promote_inquiry_ratings($inquiry_nid) {
  $query = "SELECT rating, COUNT(rating) as n FROM {pi_promote_ratings} WHERE inquiry_id=%d GROUP BY rating";
  $ratings = array('1' => 0, '2' => 0, '3' => 0, '4' => 0, '5' => 0);
  $result = db_query($query, $inquiry_nid);
  while($row = db_fetch_array($result)) {
    $ratings[$row['rating']] = (int)$row['n'];
  }
  
  return $ratings;
}

function _pi_promote_get_value($inquiry_nid) {
  $query = "SELECT status FROM {pi_promote} WHERE inquiry_id=%d LIMIT 1";
  $row = db_fetch_array(db_query($query, $inquiry_nid));
  return $row ? intval($row['status']) : PI_PROMOTE_NONE;
}

function pi_promote_inquiry_rate_form(&$form_state) {
  global $user;
  $inquiry_info = pi_info()->getCurrentInquiryInfo();
  $form = array();

  if ($inquiry_info->getInquiryNode()) {
    $inquiry_nid = $inquiry_info->getInquiryNid();

    $is_admin = $inquiry_info->userIsInquiryAdmin($user->uid);

    if (!$is_admin) {
      $rating_query = "SELECT rating FROM {pi_promote_ratings} WHERE inquiry_id=%d AND uid=%d LIMIT 1";
      $rating_row = db_fetch_array(db_query($rating_query, $inquiry_nid, $user->uid));
      $rating = $rating_row ? intval($rating_row['rating']) : 0;
      $ratting_wrapper = nquire_commons_create_page_section_prefix_suffix('', t('Rate this inquiry'));
      $form['rating_prefix'] = array(
          '#value' => $ratting_wrapper['prefix'],
      );
      $form['rating'] = array(
          '#type' => 'radios',
          '#title' => t('Your rating'),
          '#options' => array(1 => t('1 - awful'), 2 => t('2'), 3 => t('3'), 4 => t('4'), 5 => t('5 - fantastic')),
          '#default_value' => $rating,
      );
      $form['rating_suffix'] = array(
          '#value' => $ratting_wrapper['suffix'],
      );
    }

    nquire_commons_create_form_save_cancel_buttons($form, 'pi_promote_inquiry_rate_form_submit', "inquiry/$inquiry_nid/rate");
  }

  return $form;
}

function pi_promote_inquiry_rate_form_submit($form, $form_state) {
  $inquiry_info = pi_info()->getCurrentInquiryInfo();
  if ($inquiry_info->getInquiryNode()) {
    $inquiry_nid = $inquiry_info->getInquiryNid();
    
    if (isset($form_state['values']['rating'])) {
      global $user;
      _pi_promote_set_rating($inquiry_nid, $user->uid, $form_state['values']['rating']);
    }
  }
  nquire_commons_form_close($form, $form_state);
}

/** rate * */
function pi_promote_inquiry_form(&$form_state) {
  global $user;
  $inquiry_info = pi_info()->getCurrentInquiryInfo();
  $form = array();

  if ($inquiry_info->getInquiryNode()) {
    $inquiry_nid = $inquiry_info->getInquiryNid();

    $status = _pi_promote_get_value($inquiry_nid);


    if ($status === PI_PROMOTE_SELECTED) {
      $status_text = t("This inquiry is currently shown in this site's front page. Uncheck this option to remove it.");
    } else if ($status === PI_PROMOTE_REQUESTED) {
      $status_text = t("This inquiry has been proposed for this site's front page. Uncheck this option to cancel the proposal.");
    } else {
      $status_text = t("This inquiry is not shown in this site's front page. Check this option to propose it for the front page.");
    }


    $promote_wrapper = nquire_commons_create_page_section_prefix_suffix($status_text, t('Promote inquiry'));
    $form['promote_prefix'] = array(
        '#value' => $promote_wrapper['prefix'],
    );

    $form['promote'] = array(
        '#type' => 'checkbox',
        '#title' => t('Promote to front page'),
        '#description' => $description,
        '#default_value' => $status != PI_PROMOTE_NONE,
    );

    $form['promote_suffix'] = array(
        '#value' => $promote_wrapper['suffix'],
    );



    nquire_commons_create_form_save_cancel_buttons($form, 'pi_promote_inquiry_form_submit', "inquiry/$inquiry_nid/promote");
  }

  return $form;
}

function pi_promote_inquiry_form_submit($form, $form_state) {
  $inquiry_info = pi_info()->getCurrentInquiryInfo();
  if ($inquiry_info->getInquiryNode()) {
    $inquiry_nid = $inquiry_info->getInquiryNid();
    if (isset($form_state['values']['promote'])) {
      $promote = $form_state['values']['promote'];
      $current_value = _pi_promote_get_value($inquiry_nid);
      if ($promote && !$current_value) {
        _pi_promote_set_value($inquiry_nid, PI_PROMOTE_REQUESTED);
      } else if (!$promote && $current_value) {
        _pi_promote_set_value($inquiry_nid, PI_PROMOTE_NONE);
      }
    }
  }
  nquire_commons_form_close($form, $form_state);
}

function pi_promote_nodeapi($node, $op) {
  if ($op === 'delete') {
    if ($node->type === 'pi_inquiry') {
      db_query('DELETE FROM {pi_promote} WHERE inquiry_id=%d', $node->nid);
    } else if ($node->type === 'story') {
      db_query('DELETE FROM {pi_promote_news} WHERE news_id=%d', $node->nid);
    }
  }
}

function pi_promote_admin_news() {
  drupal_add_js(drupal_get_path('module', 'pi_promote') . '/js/pi_promote_news_admin.js');

  $node_type = "story";
  $result = db_query("SELECT node.nid, pi_promote_news.selected, pi_promote_news.storyusage, pi_promote_news.weight FROM node LEFT JOIN pi_promote_news ON node.nid=pi_promote_news.news_id WHERE type = '%s' ", $node_type);
  $news = array();
  while ($row = db_fetch_array($result)) {
    $pos = 0;
    if (isset($row['selected']) && isset($row['weight'])) {
      if ($row['selected'] == 1) {
        $pos = $row['weight'];
      } else if ($row['selected'] > 1) {
        $pos = $row['weight'] - (10 * ($row['selected'] - 1));
      }
    }

    $news[] = array(
        'node' => node_load($row['nid']),
        'pos' => $pos,
        'usage' => $row['storyusage'],
    );
  }

  usort($news, function($a, $b) {
    if ($a['pos'] == $b['pos']) {
      return $b['node']->created - $a['node']->created;
    } else if ($a['pos'] && $b['pos']) {
      return $a['pos'] - $b['pos'];
    } else if ($a['pos']) {
      return -1;
    } else if ($b['pos']) {
      return 1;
    } else {
      return 0;
    }
  });

  return drupal_get_form('pi_promote_admin_news_form', $news);
}

function pi_promote_get_story($function) {
  $query = "SELECT node.nid FROM {node} LEFT JOIN {pi_promote_news} ON node.nid=pi_promote_news.news_id WHERE pi_promote_news.storyusage='%s' LIMIT 1";
  $result = db_query($query, $function);
  $row = db_fetch_array($result);
  return $row ? $row['nid'] : FALSE;
}

function pi_promote_get_menu_items() {
  $paths = array();
  $result = db_query("SELECT node.nid, pi_promote_news.selected, pi_promote_news.weight FROM {node} LEFT JOIN {pi_promote_news} ON node.nid=pi_promote_news.news_id WHERE pi_promote_news.selected>1 ORDER BY pi_promote_news.weight ASC");
  $first = true;
  $main_paths = array(NULL, NULL, NULL);

  while ($row = db_fetch_array($result)) {
    $node = node_load($row['nid']);
    $path = "node/{$row['nid']}";
    $menu = $row['selected'] - 2;
    $weight = $row['weight'];

    $title = check_plain($node->title);

    if ($main_paths[$menu] == NULL) {
      $main_paths[$menu] = $path;
      $paths[$path] = array(
          'title' => $title,
          'children' => array(),
      );
    } else {
      $paths[$main_paths[$menu]]['children'][$path] = $title;
    }
  }
  return $paths;
}

function pi_promote_admin_news_form($form_state, $news) {

  $form = array(
      'intro' => array(
          '#value' => '<p>' . t('Click <a href="!url">here</a> to create a new story.', array('!url' => url('node/add/story', array('query' => array('destination' => 'admin/nquire/news'))))) . '</p>'
          . '<p>' . t('Select the stories to be shown in the news feed.') . '</p>',
      ),
      'stories' => array(
          '#prefix' => '<ul class="item-list">',
          '#suffix' => '</ul>',
          '#tree' => TRUE,
      ),
  );

  $options = array(0 => t('Not shown'));
  for ($i = 3; $i > 0; $i--) {
    for ($j = 1; $j < 5; $j++) {
      if ($j == 1) {
        $label = t('Menu item !i', array('!i' => (4 - $i)));
      } else {
        $label = t('Submenu !i.!j', array('!i' => (4 - $i), '!j' => ($j - 1)));
      }

      $options[-10 * $i + $j] = $label;
    }
  }
  for ($i = 1; $i <= 10; $i++) {
    $options[$i] = t('News item: !p', array('!p' => $i));
  }

  $usage_options = array(
      '' => t('None'),
      'help_authoring_tool' => t('Authoring tool help'),
  );

  foreach ($news as $item) {

    $form['stories'][$item['node']->nid] = array(
        '#tree' => TRUE,
        'position' => array(
            '#prefix' => '<li class="news_item_selector"><b>' . check_plain($item['node']->title) . '</b>&nbsp;&nbsp;&nbsp;<small>' . l(t('edit'), 'node/' . $item['node']->nid . '/edit', array('query' => array('destination' => 'admin/nquire/news'))) . '</small>',
            '#type' => 'select',
            '#options' => $options,
            '#default_value' => $item['pos'],
        ),
        'usage' => array(
            '#type' => 'select',
            '#suffix' => '</li>',
            '#options' => $usage_options,
            '#default_value' => $item['usage'],
        ),
    );
  }

  nquire_commons_create_form_save_cancel_buttons($form, 'pi_promote_admin_news_form_submit', "admin/nquire/news");
  return $form;
}

function pi_promote_admin_news_form_submit($form, $form_state) {
  $query = "INSERT INTO pi_promote_news (news_id, selected, storyusage, weight) VALUES ('%d', '%d', '%s', '%d') ON DUPLICATE KEY UPDATE selected='%d', storyusage='%s', weight='%d'";

  asort($form_state['values']['stories']);
  $newsIndex = 1;
  $menuIndexes = array(1, 1, 1);
  foreach ($form_state['values']['stories'] as $nid => $values) {
    $weight = $values['position'];
    $usage = $values['usage'];

    if ($weight > 0) {
      $selected = 1;
      $i = $newsIndex ++;
    } else if ($weight < 0) {
      $menu = (int) floor(abs($weight) / 10);
      $selected = 2 + $menu;
      $i = $menuIndexes[$menu] ++;
    } else {
      $selected = 0;
      $i = 0;
    }
    db_query($query, $nid, $selected, $usage, $i, $selected, $usage, $i);
  }
}
