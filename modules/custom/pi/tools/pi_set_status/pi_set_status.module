<?php
// $Id: pi_set_status.module,v 1.2 2009/06/11 09:55:10 ou_mbg Exp $

/**
 * @file Module for "pi_set_status" node type
 */


/**
 * Implementation of hook_node_info().
 */
function pi_set_status_node_info() {
    return array(
	    'pi_set_status' => array(
	    'name' => t('Inquiry set activity status'), // Required.
	    'module' => 'pi_set_status',  // Required.
	    'description' => t('Set status for an activity'), // Required.
	    'has_title' => TRUE,
	    'title_label' => t('Set activity status'),
	    'has_body' => TRUE,
	    'body_label' => t('Set status'),
	    'locked' => TRUE)
    );
}


/**
 * Implementation of hook_perm().
 */
function pi_set_status_perm() {
    return array();
}

/**
 * Implementation of hook_access().
 */
function pi_set_status_access($op, $node) {
    global $user;

    if ($op == 'create') {
        return TRUE;
    }

    if ($op == 'update') {
        return TRUE;
    }
}

/**
 * Implementation of hook_form().
 */
function pi_set_status_form(&$node) {

	global $user;
  $type = node_get_types('type', $node);
  	
    $form['title'] = array(
        '#type' => 'hidden',
        '#title' => check_plain($type->title_label),
        '#required' => FALSE,
        '#default_value' => $type->title_label,
        '#weight' => -5
    );

    $activity_id = arg(1);
    $prefix = 'Change activity status here: ' . $activity_id;
    $inquiry_id = get_inquiry_id_for_activity_id($activity_id);
    
    $node_details = new stdClass;
    $node_details->inquiry_id = $inquiry_id;
    $node_details->activity_id = $activity_id;
    
      if (is_numeric($activity_id))
      {
        $ap_result = get_activity_participants($node_details);
        $audience = $ap_result["audience"];
        $activity_participants = $ap_result["activity_participants"];
        $activity_name = $ap_result["name"];
          
        /*get the status for each actual audience*/
        //use activity status
        $prefix .= generate_status_form($activity_participants, $node_details, $audience);
      }

    $form['#prefix'] = $prefix;
    return $form;

}

function activity_in_inquiry_stage($activty_id, $inquiry_id, $stage_id) {
  
}

function generate_status_form($activity_participants, $node_details, $audience) {
  global $user;
  
  $image_path = drupal_get_path( 'module', 'pi' ) . '/images/';
  $status_image = array();
  $status_image["start"] = "creatable.png";
  $status_image["edit"] = "editable.png";
  $status_image["view"] = "viewable.png";
  $status_image["unavailable"] = "unavailable.png";

  $headings = array(ucwords($audience), "Status");
  $table = array();

  if ($audience == "individual") {
    foreach ($activity_participants as $activity_participant) {
      if ($activity_participant != 1) {
        
        $loaded_activity = load_activity($node_details->activity_id);
        $visible_status = get_visible_status_of_activity($node_details->inquiry_id, $node_details->activity_id, $activity_participant);
        $node_function = get_node_function_of_activity($node_details->inquiry_id, $node_details->activity_id, $activity_participant);
        drupal_set_message($loaded_activity->activity_type.'x'. $node_details->activity_id.'y'. $node_details->inquiry_id.'z'. $node_function.'a'. $visible_status);
        //$new_status = find_new_status($loaded_activity->activity_type, $node_details->activity_id, $node_details->inquiry_id, $node_function, $visible_status, "pi_activity_enter_focus");
        //pi_debug_message($new_status);
        $table[] = array(t(get_user_name($activity_participant)), t("<img src=\"" . $image_path. $status_image[$visible_status] . "\"/>" . 'other status'));
      }
    }
  }

  else {
    foreach ($activity_participants as $activity_participant) {
      $members_of_group = get_members_of_group($activity_participant);
      $group_member = db_fetch_object($members_of_group);

      //I need this because uid 1 is admin and a member of every group
      if ($group_member->uid == 1) {
        $group_member = $group_member = db_fetch_object($members_of_group);
      }
      $table[] = array(t(get_group_name($activity_participant)), t("<img src=\"" . $image_path. $status_image[get_visible_status_of_activity($node_details->inquiry_id, $node_details->activity_id, $group_member->uid)] . "\"/>" . 'other status'));
    }
  }
  $content .= theme('table', $headings, $table);
  return $content;
}

/**
 * Implementation of hook_insert().
 */
function pi_set_status_insert($node) {

}

/**
 * Implementation of hook_update().
 */
function pi_set_status_update($node) {

}
