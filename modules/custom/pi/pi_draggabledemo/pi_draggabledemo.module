<?php

/**
 * Implementation of hook_node_info().
*/ 

function pi_draggabledemo_node_info() {
  // We return an array since a module can define multiple node types.
  // We're only defining one node type, type 'pi_selected_measures'.
  return array(
    'pi_draggabledemo' => array(
      'name' => t('Draggable order measures'), // Required.
      'module' => 'pi_draggabledemo',  // Required.
      'description' => t('Drag order selected measures used in your inquiry'), // Required.
      'has_title' => TRUE,
      'title_label' => t('Drag order measures'),
      'has_body' => TRUE,
      'body_label' => t('Measures'),
      'locked' => TRUE
    )
  );
}

/**
* Implementation of hook_menu

function pi_draggabledemo_menu() {
  $items = array();

  $items['draggabledemo'] = array(
    'title' => 'Draggable Sorting List Demo',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pi_draggabledemo_form'),
    'access arguments' => array('access content'),
  );

  return $items;
}*/

/**
* Form for re-ordering draggabledemo
*/
function pi_draggabledemo_form($node) {
  $data = array(
            0 => 'First One',
            1 => 'Another One',
            2 => 'Some One',
          );
  $form = array();
  $form['list']['#tree'] = TRUE;
  $form['list']['#theme'] = 'pi_draggabledemo_form';
  foreach ($data AS $key => $title) {
    $form['list'][$key]['title'] = array('#value' => $title);
    $form['list'][$key]['sort'] = array('#type' => 'weight', '#delta' => count($data), '#default_value' => $key);
  }

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );

  return $form;
}

/**
* Theme the re-ordering form
*/
function theme_pi_draggabledemo($form) {
  drupal_add_tabledrag('draggabledemo-sort', 'order', 'sibling', 'sort');
  $header = array('', 'title', 'sort');
  foreach (element_children($form) as $key) {
    // Add class to group weight fields for drag and drop.
    $form[$key]['sort']['#attributes']['class'] = 'sort';

    $row = array('');
dsm($form[$key]['name']);
    $row[] = drupal_render($form[$key]['title']);
    $row[] = drupal_render($form[$key]['sort']);
    $rows[] = array('data' => $row, 'class' => 'draggable');
  }
  $output = theme('table', $header, $rows, array('id' => 'draggabledemo-sort'));
  $output .= drupal_render($form);
  return $output;
}

/**
* Implementation of hook_theme
*/
function pi_draggabledemo_theme() {
  return array(
    'pi_draggabledemo_form' => array(
      'arguments' => array('form' => NULL),
    ),
  );
}
?>
