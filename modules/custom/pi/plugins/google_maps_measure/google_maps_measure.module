<?php


function google_maps_measure_pi_measure__googlemap_create_form_item($measure_node, &$form, $value) {
  $item = array(
      '#type' => 'textfield',
      '#title' => check_plain($measure_node->title),
      '#description' => check_plain($measure_node->body),
      '#default_value' => $value,
      '#required' => FALSE,
  );

  $form["measure_" . $measure_node->nid] = $item;
}

function google_maps_measure_pi_measure__googlemap_format_table_value($measure_node, $value) {
  return check_plain($value);
}

function google_maps_measure_pi_measure__googlemap_submeasure_get_title($measure_node, $key) {
  return check_plain($measure_node->title) . t(' (Google map @variable)', array('@variable' => $key));
}

function google_maps_measure_pi_measure__googlemap_get_submeasure_keys($measure_node) {
  $data = nquire_commons_decode_data($measure_node->data);
  $result = array();
  foreach(array('latitude', 'longitude', 'altitude') as $variable) {
    if ($data[$variable]) {
      $result[] = "{$measure_node->nid}:{$variable}";
    }
  }
  return $result;
}

function google_maps_measure_pi_measure__googlemap_submeasure_get_title_for_chart($measure_node, $key) {
  switch($key) {
    case 'latitude':
      return t('Latitude');
    case 'longitude':
      return t('Longitude');
    case 'altitude':
      return t('Altitude');
    default:
      return 'unkwnown';
  }
}

function google_maps_measure_pi_measure__googlemap_submeasure_is_numeric() {
  return TRUE;
}


function google_maps_measure_pi_measure__googlemap_submeasure_get_value_for_chart($measure_node, $key, &$value) {
  return 0;
}


function google_maps_measure_pi_measure__googlemap_process_form_value($measure_node, &$value, $old_value) {

}
