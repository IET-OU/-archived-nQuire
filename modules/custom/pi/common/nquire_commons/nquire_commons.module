<?php

function nquire_commons_nids_by_type_and_user($type, $uid) {

	$nids = array();

	$query = "SELECT nid FROM {node} WHERE {node}.type='%s' AND {node}.uid='%d'";
	$result = db_query($query, $type, $uid);
	while ($row = db_fetch_array($result)) {
		$nids[] = $row['nid'];
	}

	return $nids;
}

function nquire_commons_nodes_by_type_and_user($type, $uid) {
	$nids = nquire_commons_nids_by_type_and_user($type, $uid);

	$nodes = array();
	foreach ($nids as $nid) {
		$nodes[$nid] = node_load($nid);
	}

	return $nodes;
}

function nquire_commons_nodes2table($nodes, $fields) {
	$rows = array();
	foreach ($nodes as $node) {
		$row = array();
		foreach ($fields as $field) {
			$row[] = $node->$field;
		}
		$rows[] = $row;
	}
	return $rows;
}

function nquire_commons_load_javascript_support() {
	drupal_add_js(drupal_get_path('module', 'nquire_commons') . '/js/nQuireJsSupport.js');
	drupal_add_js(drupal_get_path('module', 'nquire_commons') . '/js/jquery.cookie.js');
}

function nquire_commons_load_jquery_svg() {
	drupal_add_js(drupal_get_path('module', 'nquire_commons') . '/js/jquery.svg.js');
	drupal_add_js(drupal_get_path('module', 'nquire_commons') . '/js/jquery.svgdom.js');
}

function nquire_commons_load_javascript_custom_mouse_input() {
	drupal_add_js(drupal_get_path('module', 'nquire_commons') . '/js/jquery.customMouseInput.js');
}

function nquire_commons_load_nquire_dynamic_measure_support() {
	nquire_commons_load_javascript_support();
	drupal_add_js(drupal_get_path('module', 'nquire_commons') . '/js/DynamicMeasureService.js');
	drupal_add_css(drupal_get_path('module', 'nquire_commons') . '/css/DynamicMeasureService.css');
}

function nquire_commons_load_ahah_fix() {
	drupal_add_css(drupal_get_path('module', 'nquire_commons') . '/css/ahahFix.css');
}

function nquire_commons_load_nquire_widget_support() {
	drupal_add_css(drupal_get_path('module', 'nquire_commons') . '/css/nQuireWidget.css');
	drupal_add_js(drupal_get_path('module', 'nquire_commons') . '/js/jquery.nQuireWidget.js');
}

function nquire_commons_load_nquire_tooltip_support() {
	drupal_add_js(drupal_get_path('module', 'nquire_commons') . '/js/jquery.nQuireTooltip.js');
	drupal_add_css(drupal_get_path('module', 'nquire_commons') . '/css/nQuireTooltip.css');
}

function nquire_commons_load_external_link_format() {
	drupal_add_css(drupal_get_path('module', 'nquire_commons') . '/css/external_link.css');
}

function nquire_commons_load_submit_form_links() {
	drupal_add_js(drupal_get_path('module', 'nquire_commons') . '/js/submitFormLinks.js');
}

function nquire_commons_form_submit_link($text, $path) {
	return l($text, $path, array(
			'attributes' => array(
					'class' => 'automatic-form-submit',
					'form_destination' => $path,
					'onclick' => 'return nQuireSubmitFormLinks.launch(this);',
	)));
}

function nquire_commons_form_set_default_link_action(&$form, $action) {
	$form['external_link_action'] = array(
			'#type' => 'hidden',
			'#default_value' => $action,
	);
}

function nquire_commons_create_widget_title($title) {
	return "<div class='nquire-widget-title'>$title</div>";
}

function nquire_commons_create_widget_description($description) {
	return "<div class='nquire-widget-description'>$description</div>";
}

function nquire_commons_form_default_value($form_state, $path, $default) {
	if (isset($form_state['values'])) {
		$path_sections = explode('.', $path);

		$state = $form_state['values'];
		$valid = TRUE;
		foreach ($path_sections as $section) {
			if (isset($state[$section])) {
				$state = $state[$section];
			} else {
				$valid = FALSE;
				break;
			}
		}

		if ($valid) {
			return $state;
		}
	}

	return $default;
}

function nquire_commons_form_data_default_value($data, $data_path, $form_state, $form_state_path, $default) {
	$_default = nquire_commons_read_data_value($data, $data_path, $default);
	return nquire_commons_form_default_value($form_state, $form_state_path, $_default);
}

function nquire_commons_form_node_default_value($node, $attribute, $form_state, $form_state_path, $default) {
	$_default = $node && isset($node->$attribute) ? $node->$attribute : $default;
	return nquire_commons_form_default_value($form_state, $form_state_path, $_default);
}

function nquire_commons_create_form_wrapped_section(&$form, $section_id) {
	$form[$section_id] = array(
			'wrapper_open' => array(
					'#value' => "<div id='$section_id'>",
					'#weight' => 0,
			),
			'wrapped_content' => array(
					'#weight' => 1,
			),
			'wrapper_end' => array(
					'#value' => '</div>',
					'#weight' => 2,
			)
	);
}

function nquire_commons_read_data_value($data, $path, $default) {
	if ($data) {
		$current = $data;
		$path_sections = explode('.', $path);

		$valid = TRUE;
		foreach ($path_sections as $section) {
			if (isset($current[$section])) {
				$current = $current[$section];
			} else {
				$valid = FALSE;
				break;
			}
		}

		if ($valid) {
			return $current;
		}
	}

	return $default;
}

function nquire_commons_decode_data($data, $default = '{}') {
	return json_decode($data && strlen($data) > 0 ? $data : $default, TRUE);
}

function nquire_commons_inject_files_path_javascript() {
	$module = "{"
					. "  init: function() {"
					. "    this.filesPath = '" . file_create_url(file_directory_path()) . "';"
					. "  }"
					. "}";

	nquire_commons_inject_inline_javascript_module('nQuireFilesPath', $module);
}

function nquire_commons_user_name_or_me($uid, $myuid = FALSE) {
	if (!$myuid) {
		global $user;
		$myuid = $user->uid;
	}

	if ($uid == $myuid) {
		return '<b>' . t('Me') . '</b>';
	} else {
		$u = user_load($uid);
		return check_plain($u->name);
	}
}

/* * ********
 * LAYOUT *
 * ******** */

function nquire_commons_create_layout($tree, $root = TRUE) {
	nquire_commons_load_javascript_support();
	drupal_add_js(drupal_get_path('module', 'nquire_commons') . '/js/LayoutManager.js');
	drupal_add_css(drupal_get_path('module', 'nquire_commons') . '/css/LayoutManager.css');

	$class = "nquire-layout";
	if ($root) {
		$class .= " nquire-layout-root";
	}

	if (isset($tree['children'])) {
		$content = '';
		foreach ($tree['children'] as $child) {
			$content .= nquire_commons_create_layout($child, FALSE);
		}
		$direction = "nquire-layout-direction='{$tree['direction']}' ";
		$class .= " nquire-layout-{$tree['direction']}";
	} else {
		$content = isset($tree['content']) ? $tree['content'] : '';
		$direction = '';
		$class .= " nquire-layout-leaf";
	}

	if (isset($tree['class'])) {
		$class .= " {$tree['class']}";
	}

	$id = isset($tree['id']) ? "id='{$tree['id']}' " : "";

	if (isset($tree['size']) && is_numeric($tree['size'])) {
		$flex = 0;
		$size = "size='{$tree['size']}px' ";
	} else if ($tree['size'] === 'auto') {
		$flex = 0;
		$size = "";
	} else {
		$flex = 1;
		$size = "";
	}

	$output = "<div {$id}class='$class' nquire-layout-flex='$flex' {$direction}{$size}>$content</div>";
	return $output;
}

function nquire_commons_create_tabs_panel($tabs) {
	nquire_commons_load_javascript_support();
	drupal_add_js(drupal_get_path('module', 'nquire_commons') . '/js/TabsManager.js');
	drupal_add_css(drupal_get_path('module', 'nquire_commons') . '/css/TabsManager.css');

	$output = '<div class="nquire-tabs-container">';
	foreach ($tabs as $tab) {
		$output .= '<div tab="' . $tab['id'] . '" class="nquire-tabs-tab">' . $tab['title'] . '</div>';
	}

	$output .= '</div>';
	return $output;
}

function nquire_commons_create_false_block($title, $content, $bottom, $id = NULL) {
	drupal_add_css(drupal_get_path('module', 'nquire_commons') . '/css/falseblock.css');


	$output = array(
			'title' => '<div class="nquire-block-title">' . $title . '</div>',
			'middle' => '<div class="nquire-block-middle-content">' . $content . '</div>',
			'bottom' => '<div class="nquire-block-bottom-content">' . $bottom . '</div>',
	);
	return $output;
}

function nquire_commons_create_ajax_false_data_block($rendered_form, $id = NULL) {
	$data_block_title = '<div id="nquire-data-input-header-new">' . t('Add new data') . '</div>'
					. '<div id="nquire-data-input-header-edit">' . t('Edit data') . '</div>';

	$data_block_bottom = '<div class="nquire-data-input-button-menu">'
					. '  <div class="nquire-data-input-button-row">'
					. '    <button class="nquire-data-input-hidden" id="nquire-data-input-button-savenew">' . t('Save new data') . '</button> '
					. '    <button class="nquire-data-input-hidden" id="nquire-data-input-button-savechanges">' . t('Save changes') . '</button> '
					. '    <div class="nquire-data-input-message nquire-data-input-hidden" id="nquire-data-input-button-saving">' . t('Saving data... ') . '</div> '
					. '    <div class="nquire-data-input-message nquire-data-input-hidden" id="nquire-data-input-button-saved">' . t('All changes saved ') . '</div> '
					. '    <div class="nquire-data-input-icon nquire-data-input-hidden" id="nquire-data-input-button-undo"></div> '
					. '    <div class="nquire-data-input-icon nquire-data-input-hidden" id="nquire-data-input-button-redo"></div>'
					. '  </div>'
					. '  <div class="nquire-data-input-button-row">'
					. '    <button class="nquire-data-input-hidden" id="nquire-data-input-button-createdata">' . t('New data') . '</button>'
					. '    <button class="nquire-data-input-hidden" id="nquire-data-input-button-deletedata">' . t('Delete data') . '</button>'
					. '  </div>'
					. '</div>';

	return nquire_commons_create_false_block($data_block_title, $rendered_form, $data_block_bottom, $id);
}

function nquire_commons_inject_inline_javascript_module($id, $object, $dependencies = null) {
	static $modules = array();
	if (!$modules[$id]) {
		$dependencies_str = $dependencies ? (', ["' . implode('", "', $dependencies) . '"]') : '';
		$script = "$(function() {nQuireJsSupport.register('$id', {$object}{$dependencies_str});});";
		drupal_add_js($script, 'inline');
		$modules[$id] = TRUE;
	}
}

function nquire_commons_random_string($length) {
	$chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
	$n = strlen($chars) - 1;

	$output = '';
	for ($i = 0; $i < $length; $i++) {
		$output .= $chars[rand(0, $n)];
	}

	return $output;
}

/* form functions */

function nquire_commons_create_form_save_cancel_buttons(&$form, $save_callback, $cancel_path, $save_label = FALSE, $cancel_label = FALSE) {
	nquire_commons_create_form_buttons($form, array(
			'submit' => array(
					'type' => 'button',
					'label' => $save_label ? $save_label : t('Save'),
					'callback' => $save_callback,
			),
			'cancel' => array(
					'type' => 'link',
					'label' => $cancel_label ? $cancel_label : t('Cancel'),
					'callback' => $cancel_path,
			),
	));
	nquire_commons_create_form_destination($form, $cancel_path);
}

function nquire_commons_create_form_cancel_button(&$form, $cancel_path, $cancel_label = FALSE) {
	nquire_commons_create_form_buttons($form, array(
			'cancel' => array(
					'type' => 'link',
					'label' => $cancel_label ? $cancel_label : t('Cancel'),
					'callback' => $cancel_path,
			),
	));
	nquire_commons_create_form_destination($form, $cancel_path);
}

function nquire_commont_create_form_delete_cancel_buttons(&$form, $delete_callback, $cancel_path) {
	nquire_commons_create_form_buttons($form, array(
			'delete' => array(
					'type' => 'button',
					'label' => t('Delete'),
					'callback' => $delete_callback,
			),
			'cancel' => array(
					'type' => 'link',
					'label' => t('Cancel'),
					'callback' => $cancel_path,
			),
	));
	nquire_commons_create_form_destination($form, $cancel_path);
}

function nquire_commons_create_form_destination(&$form, $destination) {
	$form['form_destination'] = array(
			'#type' => 'hidden',
			'#default_value' => $destination,
			'#required' => FALSE,
	);
}

function nquire_commons_create_form_buttons(&$form, $buttons) {
	foreach ($buttons as $button => $data) {
		switch ($data['type']) {
			case 'button':
				$form[$button] = array(
						'#type' => 'submit',
						'#value' => $data['label'],
						'#submit' => array($data['callback']),
						'#attributes' => array('onclick' => 'this.form.target="_self";return true;'),
				);
				break;
			case 'link':
				$form[$button] = array(
						'#type' => 'markup',
						'#value' => l($data['label'], $data['callback']),
				);
				break;
		}
	}
}

function nquire_commons_form_close($form, $form_state) {
	drupal_goto($form_state['values']['form_destination']);
}

function nquire_commons_create_not_expanding_table_block($table) {
	return '<div><div style="display:inline-block;">' . $table . '</div></div>';
}

