<?php

function inquiry_basic_activities_designer_menu() {
	$items['creator/toolform'] = array(
			'page callback' => 'inquiry_basic_activities_designer_update_toolform',
			'access arguments' => array('access inquiry_creator content'),
			'type' => MENU_CALLBACK,
			'file' => 'inquiry_basic_activities_designer.tools.inc',
	);
	return $items;
}


function inquiry_basic_activities_designer_nquire_creator_activity_pi_read_information_create_activity(&$stub) {
	$content_node = new stdClass();
	$content_node->type = 'pi_read_information';
	$content_node->uid = $stub->uid;
	$content_node->title = t('Information');
	$content_node->body = '';

	node_save($content_node);

	$stub->referenced_node = $content_node->nid;
	node_save($stub);
}

function inquiry_basic_activities_designer_nquire_creator_activity_pi_read_information_form($activity, $design, &$form, &$form_state) {
	$form['body_filter']['body']['#type'] = 'hidden';
	
	$content_node = node_load($activity->referenced_node);
	
	$form['data']['information']['activity-read-information'] = array(
			'#type' => 'textarea',
			'#title' => t('Information'),
			'#description' => t('Write here the content you would like participants to read.'),
			'#default_value' => nquire_commons_form_node_default_value($content_node, 'body', $form_state, 'activity-read-information', ''),
			'#required' => FALSE,
	);
	$form['data']['information']['format'] = filter_form(2);
}

function inquiry_basic_activities_designer_nquire_creator_activity_pi_read_information_form_process(&$activity, $design, $form_values) {
	$content_node = node_load($activity->referenced_node);
	$info = $form_values['activity-read-information'];

	if ($content_node->body !== $info) {
		$content_node->body = $info;
		node_save($content_node);
	}
	return FALSE;
}

function inquiry_basic_activities_designer_nquire_creator_activity_pi_sort_key_questions_create_activity(&$stub) {
	inquiry_creator_create_activity_child($stub, 'pi_key_questions', t('Add key question'));
}

function inquiry_basic_activities_designer_nquire_creator_activity_pi_explore_tool_form($activity, $design, &$form, &$form_state) {
	$title = t('Scientific instrument');
	$description = t('Select a scientific instrument that the participants will explore. ');

	module_load_include('inc', 'inquiry_basic_activities_designer', 'inquiry_basic_activities_designer.tools');
	_inquiry_basic_activities_designer_tool_form($form, $form_state, $activity, $title, $description, FALSE, "creator/{$design->nid}/activity/{$activity->nid}");
}

function inquiry_basic_activities_designer_nquire_creator_activity_exploretool_form_process(&$activity, $design, $form_values) {
	module_load_include('inc', 'inquiry_basic_activities_designer', 'inquiry_basic_activities_designer.tools');
	return _inquiry_basic_activities_designer_tool_form_process($activity, $design, $form_values);
}

function inquiry_basic_activities_designer_nquire_creator_activity_exploretool_deployed_activity_content($activity) {
	$data = nquire_commons_decode_data($activity->data);
	if (isset($data['tool'])) {
		inquiry_available_features_invoke('tool', 'process_deployed_activity_data', $data['tool']['type'], $data['tool']);
		$data_str = json_encode($data);
	} else {
		$data_str = $activity->data;
	}

	return array(
			'type' => 'pi_explore_tool',
			'title' => '',
			'body' => '',
			'data' => $data_str,
	);
}

function inquiry_basic_activities_designer_nquire_creator_activity_pi_sort_key_answers_create_activity(&$stub) {
	inquiry_creator_create_activity_child($stub, 'pi_key_answers', t('Add key answer'));
}

/* * **********************
 * **** COLLECT DATA *****
 * ********************** */

function inquiry_basic_activities_designer_nquire_creator_activity_pi_sort_data_create_activity(&$stub) {
	inquiry_creator_create_activity_child($stub, 'pi_data', t('Add data'));
}

function inquiry_basic_activities_designer_nquire_creator_activity_pi_sort_data_form($activity, $design, &$form, &$form_state) {
	$title = t('Scientific instrument');
	$description = t('Select a scientific instrument that the participants will use to collect data. ')
					. '<br/>' . t('Alternatively, select \'No instrument\' if data will be manually entered by the users.');

	module_load_include('inc', 'inquiry_basic_activities_designer', 'inquiry_basic_activities_designer.tools');
	_inquiry_basic_activities_designer_tool_form($form, $form_state, $activity, $title, $description, TRUE, "creator/{$design->nid}/activity/{$activity->nid}");
}

function inquiry_basic_activities_designer_nquire_creator_activity_pi_sort_data_form_process(&$activity, $design, $form_values) {
	module_load_include('inc', 'inquiry_basic_activities_designer', 'inquiry_basic_activities_designer.tools');
	return _inquiry_basic_activities_designer_tool_form_process($activity, $design, $form_values);
}

function inquiry_basic_activities_designer_nquire_creator_activity_pi_methodology_form($activity, $design, &$form, &$form_state) {
	$data = nquire_commons_decode_data($activity->parameters);

	$form['data']['own_measures'] = array(
			'#type' => 'checkbox',
			'#title' => t('Users can create measures'),
			'#description' => t('Select whether users can create their own measures. '),
			'#default_value' => nquire_commons_form_data_default_value($data, 'own_measures', $form_state, 'own_measures', FALSE),
	);
}

function inquiry_basic_activities_designer_nquire_creator_activity_pi_methodology_form_process(&$activity, $design, $form_values) {
	$data = array();
	$data['own_measures'] = $form_values['own_measures'];

	$new_data = json_encode($data);
	if ($activity->parameters !== $new_data) {
		$activity->parameters = $new_data;

		$nodes = pi_activity_get_children_activities($activity->nid, TRUE);
		if (count($nodes) === 1) {
			$type = $data['own_measures'] ? 'pi_available_measures' : 'hidden_pi_available_measures';
			if ($nodes[0]->activity_type !== $type) {
				$nodes[0]->activity_type = $type;
				node_save($nodes[0]);
			}
		}

		return TRUE;
	} else {
		return FALSE;
	}
}

function inquiry_basic_activities_designer_nquire_creator_activity_pi_methodology_create_activity(&$stub) {
	inquiry_creator_create_activity_child($stub, 'hidden_pi_available_measures', t('Add measure'));
}

function inquiry_basic_activities_designer_nquire_creator_activity_pi_sort_result_presentations_create_activity(&$stub) {
	inquiry_creator_create_activity_child($stub, 'pi_result_presentations', t('Add chart'));
}
