<?php

function inquiry_basic_activities_designer_menu() {
  $items['creator/toolform'] = array(
      'page callback' => 'inquiry_basic_activities_designer_update_toolform',
      'access arguments' => array('access inquiry_creator content'),
      'type' => MENU_CALLBACK,
      'file' => 'inquiry_basic_activities_designer.tools.inc',
  );
  return $items;
}

function inquiry_basic_activities_designer_nquire_creator_activity_information_form($activity, $design, &$form, &$form_state) {
  $data = nquire_commons_decode_data($activity->data);

  $form['data']['information']['activity-read-information'] = array(
      '#type' => 'textarea',
      '#title' => t('Information'),
      '#description' => t('Write here the content you would like participants to read.'),
      '#default_value' => nquire_commons_form_data_default_value($data, 'information', $form_state, 'activity-read-information', ''),
      '#required' => FALSE,
  );
  $form['data']['information']['format'] = filter_form(2);
}

function inquiry_basic_activities_designer_nquire_creator_activity_information_form_process(&$activity, $design, $form_values) {
  $data = array();
  $data['information'] = $form_values['activity-read-information'];

  $new_data = json_encode($data);
  if ($activity->data !== $new_data) {
    $activity->data = $new_data;
    return TRUE;
  } else {
    return FALSE;
  }
}

function inquiry_basic_activities_designer_nquire_creator_activity_information_deployed_activity_type() {
  return array(
      'activity_type' => 'pi_read_information',
      'node_function' => 'view',
  );
}

function inquiry_basic_activities_designer_nquire_creator_activity_information_deployed_activity_content($activity) {
  $data = nquire_commons_decode_data($activity->data);
  return array(
      'type' => 'pi_read_information',
      'title' => '',
      'body' => $data['information'],
  );
}

function inquiry_basic_activities_designer_nquire_creator_activity_notes_deployed_activity_type() {
  return 'pi_wiki_notes';
}

/**
 * Implementation of nQuire Creator hook 'form' for 'hypothesis' activity.
 * 
 * @param type $activity
 * @param type $design
 * @param type $form
 */
function inquiry_basic_activities_designer_nquire_creator_activity_hypothesis_form($activity, $design, &$form, &$form_state) {
  $data = nquire_commons_decode_data($activity->data);

  $form['data']['hypothesis'] = array(
      '#type' => 'textarea',
      '#title' => t('Default hypothesis'),
      '#description' => t('You can propose a default hypothesis, or leave it blank if users must write the hypothesis on their own.'),
      '#default_value' => nquire_commons_form_data_default_value($data, 'hypothesis', $form_state, 'hipothesis', ''),
      '#required' => FALSE,
  );
  $form['data']['hypothesis_editable'] = array(
      '#type' => 'checkbox',
      '#title' => t('Is the default Hypothesis editable?'),
      '#description' => t('Select this option if the hypothesis can be modified by the inquiry participants.'),
      '#default_value' => nquire_commons_form_data_default_value($data, 'hypothesis_editable', $form_state, 'hypothesis_editable', TRUE),
  );
}

/**
 * Implementation of nQuire Creator hook 'form_process' for 'hypothesis' activity.
 * 
 * @param type $activity
 * @param type $design
 * @param type $form
 */
function inquiry_basic_activities_designer_nquire_creator_activity_hypothesis_form_process(&$activity, $design, $form_values) {
  $data = array();
  $data['hypothesis'] = $form_values['hypothesis'];
  $data['hypothesis_editable'] = $form_values['hypothesis_editable'];

  $new_data = json_encode($data);
  if ($activity->data !== $new_data) {
    $activity->data = $new_data;
    return TRUE;
  } else {
    return FALSE;
  }
}

function inquiry_basic_activities_designer_nquire_creator_activity_hypothesis_deployed_activity_type() {
  return 'pi_hypothesis';
}

function inquiry_basic_activities_designer_nquire_creator_activity_hypothesisconclusion_deployed_activity_type() {
  return 'pi_hypothesis_conclusion';
}

function inquiry_basic_activities_designer_nquire_creator_activity_keyquestions_form($activity, $design, &$form, &$form_state) {
  $data = nquire_commons_decode_data($activity->data);

  $value = nquire_commons_form_data_default_value($data, 'keyquestions', $form_state, 'keyquestions', '[]');
  $title = t('Default key questions:');
  $addItemLabel = t('Add key question');
  $description = t('You can add some default key questions, or leave this blank for the users to create their own.')
          . '<br/>' . t('Leave the question slots empty if you do not want to add questions.');

  nquire_list_widget_create_form_item($form['data'], 'keyquestions', $value, $title, $addItemLabel, $description);

  $form['data']['keyquestions_editable'] = array(
      '#type' => 'checkbox',
      '#title' => t('Are the default Key questios editable?'),
      '#description' => t('Select this option if the users are allows to edit, create and delete their key questions.'),
      '#default_value' => nquire_commons_form_data_default_value($data, 'keyquestions_editable', $form_state, 'keyquestions_editable', TRUE),
  );
}

function inquiry_basic_activities_designer_nquire_creator_activity_keyquestions_form_process(&$activity, $design, $form_values) {
  $data = array();
  $data['keyquestions'] = $form_values['keyquestions'];
  $data['keyquestions_editable'] = $form_values['keyquestions_editable'];

  $new_data = json_encode($data);
  if ($activity->data !== $new_data) {
    $activity->data = $new_data;
    return TRUE;
  } else {
    return FALSE;
  }
}

function inquiry_basic_activities_designer_nquire_creator_activity_keyquestions_deployed_activity_type() {
  return 'pi_sort_key_questions';
}

function inquiry_basic_activities_designer_nquire_creator_activity_keyquestions_deployed_children_activities($design_activity) {
  return array(
      'add' => array(
          'activity' => array(
              'activity_type' => 'pi_key_questions',
              'title' => t('Add key question'),
              'body' => $design_activity->body,
          ),
      ),
  );
}

function inquiry_basic_activities_designer_nquire_creator_activity_exploretool_form($activity, $design, &$form, &$form_state) {
  $data = nquire_commons_decode_data($activity->data);

  $title = t('Scientific instrument');
  $description = t('Select a scientific instrument that the participants will explore. ');

  module_load_include('inc', 'inquiry_basic_activities_designer', 'inquiry_basic_activities_designer.tools');
  _inquiry_basic_activities_designer_tool_form($form, $form_state, $data, $title, $description, FALSE, "creator/{$design->nid}/activity/{$activity->nid}");
}

function inquiry_basic_activities_designer_nquire_creator_activity_exploretool_form_process(&$activity, $design, $form_values) {
  module_load_include('inc', 'inquiry_basic_activities_designer', 'inquiry_basic_activities_designer.tools');
  return _inquiry_basic_activities_designer_tool_form_process($activity, $design, $form_values);
}

function inquiry_basic_activities_designer_nquire_creator_activity_exploretool_deployed_activity_type() {
  return 'pi_explore_tool';
}

function inquiry_basic_activities_designer_nquire_creator_activity_exploretool_deployed_activity_content($activity) {
  $data = nquire_commons_decode_data($activity->data);
  if (isset($data['tool'])) {
    inquiry_available_features_invoke('tool', 'process_deployed_activity_data', $data['tool']['type'], $data['tool']);
    $data_str = json_encode($data);
  } else {
    $data_str = $activity->data;
  }

  return array(
      'type' => 'pi_explore_tool',
      'title' => '',
      'body' => '',
      'data' => $data_str,
  );
}

function inquiry_basic_activities_designer_nquire_creator_activity_keyanswers_deployed_activity_type() {
  return 'pi_sort_key_answers';
}

function inquiry_basic_activities_designer_nquire_creator_activity_keyanswers_deployed_children_activities($design_activity) {
  return array(
      'add' => array(
          'activity' => array(
              'activity_type' => 'pi_key_answers',
              'title' => t('Add key answer'),
              'body' => $design_activity->body,
          ),
      ),
  );
}

/* * **********************
 * **** COLLECT DATA *****
 * ********************** */

function inquiry_basic_activities_designer_nquire_creator_activity_collectdata_form($activity, $design, &$form, &$form_state) {
  $data = nquire_commons_decode_data($activity->data);

  $title = t('Scientific instrument');
  $description = t('Select a scientific instrument that the participants will use to collect data. ')
          . '<br/>' . t('Alternatively, select \'No instrument\' if data will be manually entered by the users.');

  module_load_include('inc', 'inquiry_basic_activities_designer', 'inquiry_basic_activities_designer.tools');
  _inquiry_basic_activities_designer_tool_form($form, $form_state, $data, $title, $description, TRUE, "creator/{$design->nid}/activity/{$activity->nid}");
}

function inquiry_basic_activities_designer_nquire_creator_activity_collectdata_form_process(&$activity, $design, $form_values) {
  module_load_include('inc', 'inquiry_basic_activities_designer', 'inquiry_basic_activities_designer.tools');
  return _inquiry_basic_activities_designer_tool_form_process($activity, $design, $form_values);
}

function inquiry_basic_activities_designer_nquire_creator_activity_collectdata_delete(&$activity) {
  $data = nquire_commons_decode_data($activity->data);
  if (isset($data['measures'])) {
    foreach ($data['measures'] as $measure_nid) {
      inquiry_creator_delete_measure_node($measure_nid);
    }
  }
}

function inquiry_basic_activities_designer_nquire_creator_activity_collectdata_deployed_activity_type($design_activity) {
  $data = nquire_commons_decode_data($design_activity->data);
  if (isset($data['tool'])) {
    inquiry_available_features_invoke('tool', 'process_deployed_activity_data', $data['tool']['type'], $data['tool']);
    $data_str = json_encode($data);
  } else {
    $data_str = $design_activity->data;
  }

  return array(
      'activity_type' => 'pi_sort_data',
      'parameters' => $data_str,
  );
}

function inquiry_basic_activities_designer_nquire_creator_activity_collectdata_deployed_children_activities($design_activity) {
  return array(
      'add' => array(
          'activity' => array(
              'activity_type' => 'pi_data',
              'title' => t('Add data'),
              'body' => $design_activity->body,
          ),
      ),
  );
}

function inquiry_basic_activities_designer_nquire_creator_activity_collectdata_deployed_additional_content($design_activity) {
  $result = array();
  $data = nquire_commons_decode_data($design_activity->data);
  if (isset($data['tool'])) {
    $mandatory_measures = inquiry_available_features_invoke('tool', 'mandatory_measures', $data['tool']['type'], $data['tool']);
    if (is_array($mandatory_measures)) {
      foreach ($mandatory_measures as $key => $measure_data) {
        $result[$key] = array(
            'type' => 'pi_available_measures',
            'title' => $measure_data['title'],
            'body' => $measure_data['description'],
            'measure_type' => $measure_data['type'],
            'data' => $measure_data['data'],
            'activity_nid' => $design_activity->activity,
            'mandatory' => TRUE,
        );
      }
    }
  }

  if (isset($data['measures'])) {
    foreach ($data['measures'] as $design_measure_nid) {
      $design_measure = node_load($design_measure_nid);
      $result[$design_measure_nid] = array(
          'type' => 'pi_available_measures',
          'title' => $design_measure->title,
          'body' => $design_measure->body,
          'measure_type' => $design_measure->measure_type,
          'data' => $design_measure->data,
          'activity_nid' => $design_activity->activity,
          'mandatory' => FALSE,
      );
    }
  }

  return $result;
}

function inquiry_basic_activities_designer_nquire_creator_activity_methodology_deployed_activity_type() {
  return 'pi_methodology';
}

function inquiry_basic_activities_designer_nquire_creator_activity_analysedata_deployed_activity_type() {
  return 'pi_sort_result_presentations';
}

function inquiry_basic_activities_designer_nquire_creator_activity_analysedata_deployed_children_activities($design_activity) {
  return array(
      'add' => array(
          'activity' => array(
              'activity_type' => 'pi_result_presentations',
              'title' => t('Add result presentation'),
              'body' => $design_activity->body,
          ),
      ),
  );
}

/* * ***********************
 * Spreadsheet activity
 * *********************** */

function inquiry_basic_activities_designer_nquire_creator_activity_spreadsheet_deployed_activity_type() {
  return 'pi_data_spreadsheet';
}

