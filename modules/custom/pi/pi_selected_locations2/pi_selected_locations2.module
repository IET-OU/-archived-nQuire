<?php
// $Id: pi_selected_locations2.module ou_mbg Exp $

/**
 * @file
 * Provides a "selected_locations2" node type.
 */

/**
 * Implementation of hook_node_info().
 */
function pi_selected_locations2_node_info() {
  // We return an array since a module can define multiple node types.
  // We're only defining one node type, type 'pi_selected_locations2'.
  return array(
    'pi_selected_locations2' => array(
      'name' => t('Selected locations2'), // Required.
      'module' => 'pi_selected_locations2',  // Required.
      'description' => t('Select one or more locations for carrying out your inquiry'), // Required.
      'has_title' => FALSE,
      'title_label' => t('Selected Locations2'),
      'has_body' => TRUE,
      'body_label' => t('Locations'),
      'locked' => TRUE
    )
  );
}

// Below removed as ($may_cache deprecated in Drupal 6: left in as reminder MBG 12/08/09
/**
 * Implementation of hook_menu().
 */
//function pi_selected_locations2_menu($may_cache) {
//}

/**
 * Implementation of hook_perm().
 */
function pi_selected_locations2_perm() {
  return array('create pi_selected_locations2', 'edit own pi_selected_locations2');
}

/**
 * Implementation of hook_access().
 */
function pi_selected_locations2_access($op, $node) {
  global $user;

  if ($op == 'create') {
    return (user_access('create pi_selected_locations2'));
  }

  if ($op == 'update' || $op == 'delete') {
    return (user_access('edit own pi_selected_locations2'));
  }
}

/**
 * Implementation of hook_form().
 */
function pi_selected_locations2_form($node) {

  drupal_set_title(t('Pick locations 2'));
  
  $type = node_get_types('type', $node);

  global $user;
  $uid = $user->uid;
  
  $results = db_query("SELECT nid,title FROM node WHERE type = 'pi_available_locations' AND status = '1'");
  $options = array();
  
  while ($result = db_fetch_array($results)) {
    $options[$result['nid']] = $result['title'];
  }

  $form['title'] = array(
    '#type' => 'hidden',
    '#title' => check_plain($type->title_label),
    '#required' => FALSE,
    '#default_value' => check_plain($type->title_label),
    '#weight' => -5
  );
  $form['body_filter']['body'] = array(
    '#type' => 'hidden',
    '#title' => check_plain($type->body_label),
    '#required' => FALSE,
    '#default_value' => NULL,
    '#rows' => 5,
    '#weight' => -1
  );
  $form['selected_locations'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Available locations'),
    '#required' => TRUE,
    '#multiple' => TRUE,
    '#default_value' => explode(",", $node->selected_locations),
    '#options' => $options,
    '#weight' => 5
  );
  
  $prefix = "";
  $prefix .= "<p>Pick which locations you need. Click on the tabs on the right to find out more about these locations.</p>";
  $form['#prefix'] = $prefix;
  
  return $form;
}

/**
 * Implementation of hook_validate().
 */
function pi_selected_locations2_validate($node) {
  // Enforce a minimum word length of 3.
  if (isset($node->selected_locations) && count($node->selected_locations) < 1) {
    $type = node_get_types('type', $node);
    form_set_error('selected_locations', t('Your @type is too short. You need at least one location.', array('@type' => $type->name)));
  }
}

/**
 * Implementation of hook_insert().
 */
function pi_selected_locations2_insert($node) {
  pi_selected_locations_insert($node);
}

/**
 * Implementation of hook_update().
 */
function pi_selected_locations2_update($node) {
  pi_selected_locations_update($node);
}

/**
 * Implementation of hook_delete().
 */
function pi_selected_locations2_delete(&$node) {
  pi_selected_locations_delete($node);
}


/**
 * Implementation of hook_load().
 */
function pi_selected_locations2_load($node) {
  return pi_selected_locations_load($node);
}

/**
 * Implementation of hook_view().
 */
function pi_selected_locations2_view($node, $teaser = FALSE, $page = FALSE) {
  return pi_selected_locations_view($node, $teaser, $page);
}

