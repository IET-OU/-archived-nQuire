<?php

// $Id: pi_hypothesis.module,v 1.2 2009/06/11 09:55:10 ou_mbg Exp $

/**
 * @file Module for "pi_hypothesis" node type, works with pi_hypothesis_conclusion
 */

/**
 * Implementation of hook_node_info().
 */
function pi_hypothesis_node_info() {
	return array(
			'pi_hypothesis' => array(
					'name' => t('Inquiry hypothesis'), // Required.
					'module' => 'pi_hypothesis', // Required.
					'description' => t('What is your hypothesis?'), // Required.
					'has_title' => TRUE,
					'title_label' => t('Inquiry hypothesis'),
					'has_body' => TRUE,
					'body_label' => t('Hypothesis'),
					'locked' => TRUE)
	);
}

/**
 * Implementation of hook_access().
 */
function pi_hypothesis_access($op, $node, $account) {
	return FALSE;
}

function pi_hypothesis_edit_content_label() {
	return t('Edit');
}

/**
 * Implementation of hook_form().
 */
function pi_hypothesis_form(&$node) {
	$type = node_get_types('type', $node);

	$form['title'] = array(
			'#type' => 'hidden',
			'#title' => check_plain($type->title_label),
			'#required' => FALSE,
			'#default_value' => $type->title_label,
			'#weight' => -5
	);

	$form['hypothesis'] = array(
			'#type' => 'textarea',
			'#required' => FALSE,
			'#default_value' => $node->hypothesis,
			'#description' => t('A hypothesis is a prediction that you can test. Write your hypothesis here.'),
			'#resizable' => TRUE,
			'#rows' => 5,
			'#cols' => 40,
			'#weight' => -2
	);

	return $form;
}

/**
 * Implementation of hook_insert().
 */
function pi_hypothesis_insert($node) {
	db_query("INSERT INTO {pi_hypothesis} (nid, vid, hypothesis) VALUES ('%d', '%d', '%s')", $node->nid, $node->vid, $node->hypothesis);
}

/**
 * Implementation of hook_update().
 */
function pi_hypothesis_update($node) {
	if ($node->revision) {
		pi_hypothesis_insert($node);
	} else {
		db_query("UPDATE {pi_hypothesis} SET hypothesis = '%s' WHERE vid = %d", $node->hypothesis, $node->vid);
	}
}

/**
 * Implementation of hook_delete().
 */
function pi_hypothesis_delete(&$node) {
	// Delete the related information we were saving for this node.
	db_query('DELETE FROM {pi_hypothesis} WHERE nid = %d', $node->nid);
}

/**
 * Implementation of hook_load().
 */
function pi_hypothesis_load($node) {
	return db_fetch_object(db_query('SELECT * FROM {pi_hypothesis} WHERE vid = %d', $node->vid));
}

/**
 * Implementation of hook_view().
 */
function pi_hypothesis_view($node, $teaser = FALSE, $page = FALSE) {
	// Use Drupal's default node view.
	$node = node_prepare($node, $teaser);
	return $node;
}

/**
 * Implementation of hook_theme() to define the available theme functions fot pi_hypothesis
 * Currently defines 1 theme, to show the hypothesis view.
 * @return array of theme data   
 */
function pi_hypothesis_theme() {
	return array(
			'pi_hypothesis_to_support_activities' => array(
					'arguments' => array('list' => NULL),
			),
	);
}



function pi_hypothesis_get_hypothesis_nids_for_use_in_activity($using_activity_nid, $using_uid) {
	$inquiry_info = pi_info()->getInquiryInfoForActivity($using_activity_nid);
	$content_access = pi_info()->getContentManager();

	$activity = $inquiry_info->getActivityByType('pi_hypothesis');

	if ($activity) {
		return $content_access->getContentFromForUsingActivityActor($activity->nid, $using_activity_nid, $using_uid);
	}
	return FALSE;
}

function theme_pi_hypothesis_to_support_activities($hypothesis_nids) {
	if ($hypothesis_nids) {
		$output = '<b>' . t('Hypothesis: ') . '</b>';
		$output .= theme('item_list', array_map(function($nid) {
											$node = node_load($nid);
											return nl2br(check_plain($node->hypothesis));
										}, $hypothesis_nids));
		return $output;
	}
}


function pi_hypothesis_display_content_in_activity($node, $options) {	
	$content = NULL;
	if ($options['edit']) {
		$content = node_page_edit($node);
	} else {
		$content = $node ? nl2br(check_plain($node->hypothesis)) : FALSE;
	}
	
	return array(
			'mode' => 'twocolumns',
			'rows' => array(
					array('Hypothesis:', $content),
			),
	);
}
