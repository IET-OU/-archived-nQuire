<?php

// $Id: pi_available_measures.install,v 1.1 2009/06/11 09:55:10 ou_mbg Exp $

/**
 * @file
 * Install for module for creating "available measurements" node type
 */

/**
 * Implementation of pi_available_measures_install().
 */
function pi_available_measures_install() {
  // Create tables.
  drupal_install_schema('pi_available_measures');

  variable_set("og_content_type_usage_pi_available_measures", 'group_post');
  //Options are status, promote, sticky, revision
  variable_set("node_options_pi_available_measures", array('status', 'revision'));
  variable_set("comment_pi_available_measures", COMMENT_NODE_DISABLED);
  variable_set('upload_pi_available_measures', 0);

  $activities = variable_get('pi_activities', array());
  $activities['pi_available_measures'] = 'Available measures';
  variable_set('pi_activities', $activities);
}

/**
 * Implementation of pi_available_measures_uninstall().
 */
function pi_available_measures_uninstall() {
  // Remove tables.
  drupal_uninstall_schema('pi_available_measures');

  variable_del("og_content_type_usage_pi_available_measures");
  variable_del("node_options_pi_available_measures");
  variable_del("comment_pi_available_measures");
  variable_del("upload_pi_available_measures");

  $activities = variable_get('pi_activities', array());
  unset($activities['pi_available_measures']);
  variable_set('pi_activities', $activities);

  $nquire_config_variable = variable_get('pi_measure_filter_content_types', array());
  $key = array_search('pi_available_measures', $nquire_config_variable);
  if ($key !== FALSE) {
    unset($nquire_config_variable[$key]);
  }
  variable_set('pi_measure_filter_content_types', $nquire_config_variable);
}

/**
 * Implementation of pi_available_measures_schema().
 */
function pi_available_measures_schema() {

  $schema['pi_available_measures'] = array(
      'description' => 'PI available measures to choose from',
      'fields' => array(
          'nid' => array(
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'default' => 0,
              'description' => 'Primary Key: Unique ID.'),
          'vid' => array(
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'default' => 0,
              'description' => 'Primary Key: Unique: The current vid version identifier.'),
          'measure_type' => array(
              'type' => 'text',
              'size' => 'normal',
              'not null' => TRUE,
              'description' => 'Measure type.'),
          'mandatory' => array(
              'type' => 'int',
              'syze' => 'tiny',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'default' => 0,
              'description' => 'Whether this measure is always used (as a key measure).'),
          'data' => array(
              'type' => 'text',
              'size' => 'medium',
              'not null' => TRUE,
              'description' => 'What units.'),
          'activity_nid' => array(
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'default' => 0,
              'description' => 'Sort data activity that uses this measure.'),
      ),
      'primary key' => array('nid', 'vid'),
      'unique keys' => array('vid' => array('vid')),
      'indexes' => array('nid' => array('nid'))
  );

  return $schema;
}
