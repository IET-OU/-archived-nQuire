<?php

// $Id: pi_measure_filter.install,v 1.2 2009/06/11 09:55:10 ou_mbg Exp $

/**
 * @file
 * Install....
 */

/**
 * Implementation of pi_measure_filter_install().
 */
function pi_measure_filter_install() {
	// Create tables.
	drupal_install_schema('pi_measure_filter');

	variable_set("og_content_type_usage_pi_measure_filter", 'group_post');
	//Options are status, promote, sticky, revision
	variable_set("node_options_pi_measure_filter", array('status','revision'));
	variable_set("comment_pi_measure_filter", COMMENT_NODE_DISABLED);
	variable_set("upload_pi_measure_filter", 0);

	$activities = variable_get('pi_activities', array() );
	$activities['pi_measure_filter'] = 'Measure filter';
	variable_set('pi_activities', $activities);
	
	$nquire_config_variable = variable_get('pi_measure_filter_content_types', array());
	$nquire_config_variable[] = 'pi_measure_filter';
	variable_set('pi_measure_filter_content_types', $nquire_config_variable );
	
	variable_set( 'symbol_radio_option', 1 );
	variable_set( 'symbol_value', NULL );
	variable_set( 'units_radio_option', 1 );
	variable_set( 'units_value', NULL );
	variable_set( 'units_short_radio_option', 1 );
	variable_set( 'units_short_value', NULL );
	variable_set( 'field_type_radio_option', 1 );
	variable_set( 'field_type_value', NULL );
	variable_set( 'data_type_radio_option', 1 );
	variable_set( 'data_type_value', NULL );
	variable_set( 'list_options_radio_option', 1 );
	variable_set( 'list_options_value', NULL );
	variable_set( 'content_options_radio_option', 1 );
	variable_set( 'content_options_value', NULL );
	variable_set( 'textfield_size_radio_option', 1 );
	variable_set( 'textfield_size_value', 50 );
	variable_set( 'textarea_cols_radio_option', 1 );
	variable_set( 'textarea_cols_value', 10 );
	variable_set( 'textarea_rows_radio_option', 1 );
	variable_set( 'textarea_rows_value', 10 );
	variable_set( 'measurement_device_name_radio_option', 1 );
	variable_set( 'measurement_device_name_value', NULL );
	variable_set( 'measurement_device_description_radio_option', 1 );
	variable_set( 'measurement_device_description_value', NULL );
	variable_set( 'image_filename_radio_option', 0 );
	variable_set( 'image_filename_value', NULL );
	
}

/**
 * Implementation of pi_measure_filter_uninstall().
 */
function pi_measure_filter_uninstall() {
	// Remove tables.
	drupal_uninstall_schema('pi_measure_filter');

	variable_del("og_content_type_usage_pi_measure_filter");
	variable_del("node_options_pi_measure_filter");
	variable_del("comment_pi_measure_filter");
	variable_del("upload_pi_measure_filter");

	$activities = variable_get('pi_activities', array() );
	unset( $activities['pi_measure_filter'] );
	variable_set('pi_activities', $activities);
	
	$nquire_config_variable = variable_get('pi_measure_filter_content_types', array());
	$key = array_search( 'pi_measure_filter', $nquire_config_variable );
	if( $key !== FALSE )
	{
		unset( $nquire_config_variable[ $key ] );
	}
	variable_set('pi_measure_filter_content_types', $nquire_config_variable );
	
	
	variable_del( 'symbol_radio_option' );
	variable_del( 'symbol_value' );
	variable_del( 'units_radio_option' );
	variable_del( 'units_value' );
	variable_del( 'units_short_radio_option' );
	variable_del( 'units_short_value' );
	variable_del( 'field_type_radio_option' );
	variable_del( 'field_type_value' );
	variable_del( 'data_type_radio_option' );
	variable_del( 'data_type_value' );
	variable_del( 'list_options_radio_option' );
	variable_del( 'list_options_value' );
	variable_del( 'content_options_radio_option' );
	variable_del( 'content_options_value' );
	variable_del( 'textfield_size_radio_option' );
	variable_del( 'textfield_size_value' );
	variable_del( 'textarea_cols_radio_option' );
	variable_del( 'textarea_cols_value' );
	variable_del( 'textarea_rows_radio_option' );
	variable_del( 'textarea_rows_value' );
	variable_del( 'measurement_device_name_radio_option' );
	variable_del( 'measurement_device_name_value' );
	variable_del( 'measurement_device_description_radio_option' );
	variable_del( 'measurement_device_description_value' );
	variable_del( 'image_filename_radio_option' );
	variable_del( 'image_filename_value' );
}

/**
 * Implementation of pi_questions_schema().
 */
function pi_measure_filter_schema() {
	$schema['pi_measure_filter'] = array(
    'description' => 'PI measure filter.',
    'fields' => array(
      'nid' => array(
        'description' => 'The primary identifier for a node.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE),
      'vid' => array(
        'description' => 'The current {node_revisions}.vid version identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE),
      'inquiry_id' => array(
        'description' => 'The inquiry_id that the key question relates to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE),
      'symbol_radio_option' => array(
        'description' => 'Whether the symbol field is shown.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'symbol_value' => array(
        'description' => 'Default value for the symbol field.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => FALSE),
      'units_radio_option' => array(
        'description' => 'Whether the units field is shown.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'units_value' => array(
        'description' => 'Default value for the units field.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE), 
      'units_short_radio_option' => array(
        'description' => 'Whether the units_short field is shown.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'units_short_value' => array(
        'description' => 'Default value for the units_short field.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => FALSE), 
      'field_type_radio_option' => array(
        'description' => 'Whether the field_type field is shown.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'field_type_value' => array(
        'description' => 'Default value for the field_type field.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => FALSE),        
      'data_type_radio_option' => array(
        'description' => 'Whether the data_type field is shown.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'data_type_value' => array(
        'description' => 'Default value for the data_type field.',
        'type' => 'varchar',
        'length' => 64,
        'not null' => FALSE),  
      'list_options_radio_option' => array(
        'description' => 'Whether the options field is shown.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'list_options_value' => array(
        'description' => 'Default value for the options field.',
        'type' => 'text',
        'not null' => FALSE),  
      'content_options_radio_option' => array(
        'description' => 'Whether the options field is shown.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'content_options_value' => array(
        'description' => 'Default value for the options field.',
        'type' => 'text',
        'not null' => FALSE), 
      'textfield_size_radio_option' => array(
        'description' => 'Whether the textfield_size field is shown.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'textfield_size_value' => array(
        'description' => 'Default value for the textfield_size field.',
        'type' => 'int',
        'not null' => FALSE),       
      'textarea_cols_radio_option' => array(
        'description' => 'Whether the textarea_cols field is shown.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'textarea_cols_value' => array(
        'description' => 'Default value for the textarea_cols field.',
        'type' => 'int',
        'not null' => FALSE),           
       'textarea_rows_radio_option' => array(
        'description' => 'Whether the textarea_rows field is shown.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'textarea_rows_value' => array(
        'description' => 'Default value for the textarea_rows field.',
        'type' => 'int',
        'not null' => FALSE),       
      'measurement_device_name_radio_option' => array(
        'description' => 'Whether the measurement_device_name field is shown.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'measurement_device_name_value' => array(
        'description' => 'Default value for the measurement_device_name field.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE),
      'measurement_device_description_radio_option' => array(
        'description' => 'Whether the measurement_device_description field is shown.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'measurement_device_description_value' => array(
        'description' => 'Default value for the measurement_device_description field.',
        'type' => 'text',
        'not null' => FALSE),    
      'image_filename_radio_option' => array(
        'description' => 'Whether the image_filename field is shown.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'image_filename_value' => array(
        'description' => 'Default value for the image_filename field.',
        'type' => 'text',
        'not null' => FALSE),
	),
    'primary key' => array('nid','vid'),
    'unique keys' => array('vid'	=> array('vid')),
    'indexes' => array('nid'	=> array('nid')) 
	);
	return $schema;
}
