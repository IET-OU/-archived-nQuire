<?php

// $Id: pi_sort_data.module,v 1.2 2010/02/15 09:17:48 ou_pm Exp $

function pi_sort_data_node_info() {
	return array(
			'pi_sort_data' => array(
					'name' => t('Inquiry show and sort data'), // Required.
					'module' => 'pi_sort_data', // Required.
					'description' => t('Data sort'), // Required.
					'has_title' => FALSE,
					'title_label' => t('Sorted data'),
					'has_body' => TRUE,
					'body_label' => t('Sort of collected data'),
					'locked' => TRUE,
					'add_node_type' => 'pi_data'
			)
	);
}

function pi_sort_data_perm() {
	
}

function pi_sort_data_access($op, $node, $account) {
	return TRUE;
	global $user;
	$details = get_inquiry_details_from_current_path();

	if ($op == 'create') {
		return pi_activity_check_node_function($details->activity_id, $user->uid, 'add');
	}

	if ($op == 'update') {
		return pi_activity_check_node_function($details->activity_id, $user->uid, 'edit');
	}
}

/**
 * Implementation of hook_theme().
 */
function pi_sort_data_theme() {
	return array(
			'pi_sort_data' => array(
					'arguments' => array('node', 'teaser', 'data_items_to_show'),
			),
	);
}

/**
 * hook_form() for pi_sort_data which provides draggable sorting for pi_data nodes in an inquiry
 * @param $node the pi_sort_data node if it is to be edited, as per drupal 6 API
 */
function pi_sort_data_form(&$node) {
	
	$form = array();
	
	return $form;
}


function pi_sort_data_view($node, $teaser, $page = FALSE) {
	$access_data = pi_inquiry_groupings_get_access_data();

	//print_r( $node );

	$node = node_prepare($node, $teaser);

	$activity_id_for_this_node = pi_activity_get_activity_nid_for_content_nid($node->nid);

	$data_nids = pi_sort_data_get_data_for_sort_activity_nid($activity_id_for_this_node);
	$selected_measures = pi_methodology_get_measures($activity_id_for_this_node, 'key_dependent');

	$header = array();
	$header[] = t('Created:');
	$measures = array();
	foreach ($selected_measures as $measure_data) {
		$measure = node_load($measure_data['nid']);
		if (pi_data_tools_measure_plugin_show_in_table($measure)) {
			$header[] = check_plain($measure->title) . t(':');
			$measures[] = $measure;
		}
	}


	$data_rows = array();

	foreach ($data_nids as $nid) {
		$row = array();
		$data_item_node = node_load($nid);
		$data_item_activity_nid = pi_activity_get_activity_nid_for_content_nid($nid);

		$row[] = format_date($data_item_node->created, 'custom', 'Y/m/d H:i') . '<br/>'
						. t('by !user', array('!user' => nquire_commons_user_name_or_me($data_item_node->uid, $access_data->get_uid()))) . '<br/>'
						. l(t('edit'), 'activity/' . $data_item_activity_nid . '/edit') . '&nbsp;&nbsp;&nbsp;'
						. l(t('delete'), 'node/' . $nid . '/delete', array('query' => 'destination=phase/' . $access_data->get_current_phase_nid()));

		foreach ($measures as $measure) {
			$row[] = pi_data_tools_measure_plugin_format_table_value($measure, $data_item_node->values[$measure->nid]);
		}
		$data_rows[] = $row;
	}


	$link_output = make_add_activity_link($activity_id_for_this_node);

	$node->content['pi_sort_data_add_link'] = array(
			'#value' => $link_output,
			'#weight' => -3
	);

	$node->content['pi_sort_data'] = array(
			'#value' => theme('pi_sort_data', $header, $data_rows),
			'#weight' => 2
	);

	return $node;
}

function theme_pi_sort_data($header, $data_rows) {
	drupal_add_js(drupal_get_path('module', 'pi_sort_data') . '/js/sorttable.js');
	drupal_add_css(drupal_get_path('module', 'pi_sort_data') . '/css/sorttable.css');

	return theme('table', $header, $data_rows, array(
			'class' => 'sortable'
	));
}

function pi_sort_data_get_activities() {
	$access_data = pi_inquiry_groupings_get_access_data();
	return $access_data->get_activities_by_type('pi_sort_data');
}

function pi_sort_data_get_data_for_sort_node_nid($sort_data_nid) {
	$activity_nid = pi_activity_get_activity_nid_for_content_nid($sort_data_nid);
	return pi_activity_get_children_content_nids_for_sort_activity_nid($activity_nid);
}

function pi_sort_data_get_data_for_sort_activity_nid($sort_activity_nid) {
	return pi_activity_get_children_content_nids_for_sort_activity_nid($sort_activity_nid);
}
