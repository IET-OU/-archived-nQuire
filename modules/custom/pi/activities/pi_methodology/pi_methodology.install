<?php

// $Id: pi_methodology.install,v 1.2 2009/06/11 09:55:10 ou_mbg Exp $

/**
 * Implementation of hook_install()
 */
function pi_methodology_install() {
  // Create tables.
  drupal_install_schema('pi_methodology');

  variable_set("og_content_type_usage_pi_methodology", 'group_post');
  //Options are status, promote, sticky, revision
  variable_set("node_options_pi_methodology", array('status', 'revision'));
  variable_set("comment_pi_methodology", COMMENT_NODE_DISABLED);
  variable_set("upload_pi_methodology", 0);

  //$activities = variable_get('pi_activities', array() );
  //$activities['pi_methodology'] = 'Sort measures';
  //variable_set('pi_activities', $activities);

  $nquire_config_variable = variable_get('pi_measure_filter_content_types', array());
  $nquire_config_variable[] = 'pi_methodology';
  variable_set('pi_measure_filter_content_types', $nquire_config_variable);
}

/**
 * Implementation of pi_methodology_uninstall().
 */
function pi_methodology_uninstall() {
  // Remove tables.
  drupal_uninstall_schema('pi_methodology');
  variable_del('pi_methodology');

  variable_del("og_content_type_usage_pi_methodology");
  variable_del("node_options_pi_methodology");
  variable_del("comment_pi_methodology");
  variable_del("upload_pi_methodology");

  //$activities = variable_get('pi_activities', array() );
  //unset( $activities['pi_methodology'] );
  //variable_set('pi_activities', $activities);

  $nquire_config_variable = variable_get('pi_measure_filter_content_types', array());
  $key = array_search('pi_methodology', $nquire_config_variable);
  if ($key !== FALSE) {
    unset($nquire_config_variable[$key]);
  }
  variable_set('pi_measure_filter_content_types', $nquire_config_variable);
}

/**
 * Implementation of pi_methodology_schema().
 */
function pi_methodology_schema() {

  $schema['pi_methodology_measures'] = array(
      'description' => t('PI methodology'),
      'fields' => array(
          'nid' => array(
              'description' => t('node id'),
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'size' => 'medium',
              'default' => 0,
          ),
          'vid' => array(
              'description' => t('The current vid version identifier'),
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'size' => 'medium',
              'default' => 0,
          ),
          'measure_nid' => array(
              'description' => t('The nid of an available measure'),
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'size' => 'medium',
              'default' => 0,
          ),
          'status' => array(
              'description' => t('Either key, selected or none'),
              'type' => 'text',
              'size' => 'normal',
              'not null' => TRUE,
          ),
          'weight' => array(
              'description' => t('The position of the available measure'),
              'type' => 'int',
              'unsigned' => FALSE,
              'not null' => TRUE,
              'size' => 'medium',
              'default' => 0,
          ),
      ),
      'indexes' => array(
          'nid' => array('nid'),
          'vid' => array('vid'),
          'measure_nid' => array('measure_nid'),
      ),
  );



  return $schema;
}
