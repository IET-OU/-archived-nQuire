<?php
// $Id$: pi_show_summary.module ou_mbg Exp $

/**
 * @file
 * Functions for showing inquiry summary
 */

/**
 * MISSING
 * 
 * @param unknown_type $user
 * @return unknown_type
 */
function pi_show_summary($user) {
	$group_id = find_student_group_gid($user);
	$class_id = find_class_group_gid($user);
	$middle = db_result(db_query("SELECT nid FROM og_uid WHERE nid = 184 AND uid = %d", $user->uid));
	$top = db_result(db_query("SELECT nid FROM og_uid WHERE nid = 183 AND uid = %d", $user->uid));
	$hypothesis_activity = 1;
	print t("<div>");
	//show hypothesis for student group
	print t("<div class=\"clear_both\"></div>");
	print t("<h2>Our hypothesis</h2>");
	$hypothesis_res=db_fetch_object(db_query("SELECT pi_hypothesis.nid FROM pi_activity_node, node_access, pi_hypothesis WHERE pi_activity_node.activity_id=\"%d\" AND pi_activity_node.nid = node_access.nid AND node_access.gid = %d AND node_access.nid = pi_hypothesis.nid ORDER BY pi_hypothesis.vid DESC", $hypothesis_activity, $group_id));
	if ($hypothesis_res->nid) {
		$hypthesis_node = node_load($hypothesis_res->nid);
	}
	print t($hypthesis_node->body);
	
	if ($middle) {
		$choice_group = $class_id;
		$selected_locations_activity = 11;
		$selected_measures_activity = 10;
	}
	else {
		if (top) {
			$choice_group = $group_id;
			$selected_locations_activity = 3;
			$selected_measures_activity = 2;
		}
	}
	print t("<div style=\"clear: both\"></div>");
	print t("<h2>Our locations</h2>");
	if ($top || $middle) {
		$location_res=db_fetch_object(db_query("SELECT pi_selected_locations.selected_locations FROM pi_activity_node, node_access, pi_selected_locations WHERE pi_activity_node.activity_id=\"%d\" AND pi_activity_node.nid = node_access.nid AND node_access.gid = %d AND node_access.nid = pi_selected_locations.nid ORDER BY pi_selected_locations.vid DESC", $selected_locations_activity, $choice_group));
		
		$locations = explode(",", $location_res->selected_locations);
		
		foreach ($locations as $location) {
			if(is_numeric($location)) {
				print t(output_selected__locations_node(node_load($location)));
			}
		}

	}
	print t("<div style=\"clear: both\"></div>");
	print t("<h2>Our measurements</h2>");
	if ($top || $middle) {
		$measure_res=db_fetch_object(db_query("SELECT pi_selected_measures.selected_measures FROM pi_activity_node, node_access, pi_selected_measures WHERE pi_activity_node.activity_id=\"%d\" AND pi_activity_node.nid = node_access.nid AND node_access.gid = %d AND node_access.nid = pi_selected_measures.nid ORDER BY pi_selected_measures.vid DESC", $selected_measures_activity, $choice_group));
		
		$measures = explode(",", $measure_res->selected_measures);
		
		foreach ($measures as $measure) {
			if(is_numeric($measure)) {
				print t(output_selected__measures_node(node_load($measure)));
			}
		}
	}
	
	print t("<div style=\"clear: both\"></div>");
	print t("<h2>Our data</h2>");
	show_data_for_choice_and_data_groups($choice_group, $group_id, $selected_locations_activity, $selected_measures_activity);	
	
	print t("<div class=\"clear_both\"></div>");
	print t("<h2>My photos</h2>");
	
	$selected_images= db_query("SELECT pi_selected_photographs.image_id AS image_id, node.nid AS nid, pi_selected_photographs.title AS title, pi_selected_photographs.caption AS caption, pi_selected_photographs.location_id AS location_id FROM {pi_selected_photographs} LEFT JOIN {node} ON node.nid = pi_selected_photographs.nid AND node.vid = pi_selected_photographs.vid WHERE node.uid = %d AND node.type = 'pi_selected_photographs' ORDER BY pi_selected_photographs.nid ASC", $user->uid);
//	$selected_images= db_query("SELECT pi_selected_photographs.image_id AS image_id, node.nid AS nid, pi_selected_photographs.title AS title, pi_selected_photographs.caption AS caption FROM {pi_selected_photographs} LEFT JOIN {node} ON node.nid = pi_selected_photographs.nid AND node.vid = pi_selected_photographs.vid WHERE node.uid = %d AND node.type = 'pi_selected_photographs' ORDER BY pi_selected_photographs.nid ASC", $user->uid);

	//$selected_photograph_nids = array();

	while ($item = db_fetch_object($selected_images)) {
		//$selected_photograph_nids[] = $item->image_id;
		$selected_counter = $selected_counter + 1;
		$image = node_load($item->image_id);
		print t("<div style = 'display: block; clear: both; margin-bottom: 2em' >");
		//print t(substr($image->images[IMAGE_ORIGINAL],strrpos($image->images[IMAGE_ORIGINAL],'/') + 1));
		print t("<h3>" . $item->title . "</h3>");
		print t("<div>");
		print t("<div style=\"float: left; padding-right: 1em;\">");
		print t('<img src="' . url('image/view/' . $image->nid. '/preview') . '" />');
		print t("</div>");
		print t("<div style=\"float: left\">");
		print t("<p><strong>Caption&#58;</strong> " . $item->caption . "</p>");
		if (is_numeric($item->location_id)) {
			$loc_title = db_result(db_query("SELECT title FROM node WHERE nid = %d", $item->location_id));
			print t("<p><strong>Location&#58;</strong> " . $loc_title . "</p>");
		}
		print t("</div>");
		print t("</div>");
		//print l('Edit selected image', 'node/' . $item->nid . '/edit', array(), $destination, NULL, FALSE, TRUE);
		print t("</div>");
	};
	
	if ($middle) {
		print t("<div style=\"clear: both\"></div>");
		print t("<h2>Our class data</h2>");
		pi_show_class_data ($user);
	}
	print t("</div>");
 }
 
/**
 * MISSING
 * 
 * @param unknown_type $measure_node
 * @return string
 */
function output_selected__measures_node($measure_node) {
    $output = "";
    $output .= '<div class="teaser_list">';
    $output .= '<h3>' . t($measure_node->title) . '</h3>';
    if (isset($measure_node->image_id)) {
      $output .= '<img style="float: left; clear: left; padding: 0 10px 1.8em 0;" src="' . url("image/view/" . $measure_node->image_id . "/thumbnail") . '" />';
    };
    $body = t($measure_node->body);
    if (strlen($body) > 100) {
      $body = substr($body, 0, 100) . '...';
    };
    $output .= $body . '<br />';
    if (isset($measure_node->units_short) AND ($measure_node->units_short != '')) {
      $output .= t('<strong>Units: </strong>' . $measure_node->units_short);
    }
    elseif (isset($measure_node->units) AND ($measure_node->units != '')) {
      $output .= t('<strong>Units: </strong>' . $measure_node->units);
    };
    $output .= '</div>';
    return $output;
 }
 
/**
 * MISSING
 * 
 * @param unknown_type $locations_node
 * @return string
 */
function output_selected__locations_node($locations_node) {
    $output = "";
    $output .= '<div class="teaser_list">';
    $output .= '<h3>' . t($locations_node->title) . '</h3>';
    
    if (isset($locations_node->image_id)) {
      $output .= '<img style="float: left; clear: left; padding: 0 10px 1.8em 0;" src="' . url("image/view/" . $locations_node->image_id . "/thumbnail") . '" />';
    }
    elseif (isset($locations_node->map_image_id)) {
      $output .= '<img style="float: left; clear: left; padding: 0 10px 1.8em 0;" src="' . url("image/view/" . $locations_node->map_image_id . "/thumbnail") . '" />';
    };
    $body = t($locations_node->body);
    if (strlen($body) > 100) {
      $body = substr($body, 0, 100) . '...';
    };
    $output .= $body . '</br></br>';
    
    if (isset($locations_node->latitude) AND ($locations_node->latitude != 0)) {
      $output .= t('<strong>Latitude: </strong>' . $locations_node->latitude);
    };
    if ((isset($locations_node->latitude) AND ($locations_node->latitude != 0)) AND 
        (isset($locations_node->longitude) AND ($locations_node->longitude != 0))) {
      $output .= t(' &nbsp;&nbsp; ');
    };
    if (isset($locations_node->longitude) AND ($locations_node->longitude != 0)) {
      $output .= t('<strong>Longitude: </strong>' . $locations_node->longitude);
    };
   $output .= '</div>';
    return $output;
 }
