<?php
// $Id: pi_species_locations.module,v 1.2 2009/06/11 09:55:10 ou_mbg Exp $

/**
 * @file
 * Module for creating "hypothesis and key questions" node type
 */


/**
 * Implementation of hook_node_info().
 */
function pi_species_locations_node_info() {
  return array(
	'pi_species_locations' => array(
      	 'name' => t('species locations'), // Required.
	 'module' => 'pi_species_locations',  // Required.
	 'description' => t('species locations table'), // Required.
	 'has_title' => TRUE,
	 'title_label' => t('species locations'),
	 'has_body' => TRUE,
	 'body_label' => t('species locations'),
	 'min_word_count' => 2,
	 'locked' => TRUE
	)
   );
}


/**
 * Implementation of hook_perm().
 */
function pi_species_locations_perm() {
}

/**
 * Implementation of hook_access().
 */
function pi_species_locations_access($op, $node) {
  global $user;

  if ($op == 'create') {
    return TRUE;
  }

  if ($op == 'update' || $op == 'delete') {
    return TRUE;
  }
}

/**
 * Implementation of hook_form().
 */
function pi_species_locations_form(&$node) {
	
  // Get metadata for this node type
  // (we use it for labeling title and body fields).
  // We defined this in pi_hypothesis_node_info().
 
  
  $type = node_get_types('type', $node);

  $form['title'] = array(
    '#type' => 'hidden',
    '#title' => check_plain($type->title_label),
    '#required' => FALSE,
    '#default_value' => check_plain($type->title_label),
    '#weight' => -5
  );
  
    $dependent = array(1 => 'Above the surface', 2 => 'On the surface', 3 => 'In mid water', 4 => 'On the pond bottom', 5 => 'In the pond margin');
    $independent = array('Birds', 'Mammals', 'Larger insects', 'Invertebrates');
    
   $form['choices'] = array(
    '#type' => 'fieldset',
    '#title' => 'Locations'
  );
  
    foreach ($independent as $type) {
    $type_no_spaces = str_replace(" ", "_", $type);
    $form['choices'][$type_no_spaces] = array(
	'#title' => t($type),
	'#type' => 'checkboxes',
	'#options' => $dependent,
	'#default_value' => find_default_values($node->nid, $type, $dependent)
  );
  }

  $prefix .= "<p>In which habitat are each type of animal found?</p>";

 
  $form['#prefix'] = $prefix;
  
  return $form;

}

/**
 * MISSING
 * 
 * @param unknown_type $nid
 * @param unknown_type $type
 * @param unknown_type $array
 * @return multitype:
 */
function find_default_values($nid, $type, $array) {
	$pos_array = array();
	$prev_query = "SELECT location FROM pi_species_locations WHERE nid = '" . $nid . "' AND species = '" . $type ."' ";
	$db_result = db_query($prev_query);
  	while ($prev_result = db_fetch_object($db_result)) {
  		$prev_result = $prev_result->location;
  		$pos_array[] = pos_in_array($prev_result, $array);
  	}
  	return $pos_array;
}


/**
 * Implementation of hook_insert().
 */
function pi_species_locations_insert($node) {
 $dependent = array(1 => 'Above the surface', 2 => 'On the surface', 3 => 'In mid water', 4 => 'On the pond bottom', 5 => 'In the pond margin');
  $independent = array('Birds', 'Mammals', 'Larger insects', 'Invertebrates');
foreach ($node as $key=>$value) {
	$keyspaces = str_replace("_", " ", $key);
	if (in_array($keyspaces, $independent)) {
		while ($item = current($value)) {
			$query = "INSERT INTO pi_species_locations (nid, species, location) VALUES ('" . $node->nid . "', '" . $keyspaces . "', '" . $dependent[$item] . "')";
			db_query($query);
    		next($value);
		}
	}
}
}

/**
 * Implementation of hook_update().
 */
function pi_species_locations_update($node) {
	$query = "DELETE FROM pi_species_locations WHERE nid = '" . $node->nid . "' ";
	db_query($query);
	pi_species_locations_insert($node);
}

/**
 * Implementation of hook_delete().
 */
function pi_species_locations_delete(&$node) {
}

/**
 * 
 * Implementation of hook_load().
 */
function pi_species_locations_load($node) {
}

/**
 * Implementation of hook_view().
 */
function pi_species_locations_view($node, $teaser = FALSE, $page = FALSE) {
}




