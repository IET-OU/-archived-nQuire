<?php

// $Id: pi_key_answers.module,v 1.2 2009/06/11 09:55:10 ou_mbg Exp $

/**
 * @file
 * Module for creating "key answers" node type
 */

/**
 * Implementation of hook_node_info().
 */
function pi_key_answers_node_info() {
	return array(
			'pi_key_answers' => array(
					'name' => t('Inquiry add key answer'), // Required.
					'module' => 'pi_key_answers', // Required.
					'description' => t('What are the answers to the key questions of your inquiry?'), // Required.
					'has_title' => TRUE,
					'title_label' => t('Short title'),
					'has_body' => FALSE,
					'body_label' => t('Key question answer'),
					'locked' => TRUE
			)
	);
}

/**
 * Implementation of hook_access().
 */
function pi_key_answers_access($op, $node, $account) {
	return FALSE;
}

/**
 * Implementation of hook_form().
 */
function pi_key_answers_form(&$node) {
	global $user;
	$current_path = pi_info()->getCurrentPath();
	$child_activity = node_load($current_path->activity_nid);



	if ($node->key_question_id) {
		$form['key_question_id'] = array(
				'#type' => 'hidden',
				'#required' => TRUE,
				'#default_value' => $node->key_question_id,
		);
	} else {
		$key_questions = pi_sort_key_questions_get_questions_use_in_activity_nid($child_activity->parent_activity, $user->uid);

		$key_question_options = array();
		foreach ($key_questions as $question_nid) {
			$question = node_load($question_nid);
			$key_question_options[$question_nid] = $question->key_question;
		}
		$form['key_question_id'] = array(
				'#type' => 'select',
				'#required' => TRUE,
				'#description' => t('Select a key question to answer'),
				'#options' => $key_question_options,
				'#weight' => -6
		);
	}

	$form['title'] = array(
			'#type' => 'hidden',
			'#value' => t('Key answer')
	);

	$form['body_filter']['key_answer'] = array(
			'#type' => 'textarea',
			//'#title' => t('Answer'),
			'#required' => TRUE,
			'#default_value' => $node->key_answer,
			'#description' => t('Enter an answer to your selected key question'),
			'#resizable' => FALSE,
			'#rows' => 4,
			'#cols' => 40,
			'#weight' => -2
	);


	return $form;
}

/**
 * Implementation of hook_insert().
 */
function pi_key_answers_insert($node) {
	db_query("INSERT INTO {pi_key_answers} (nid, vid, key_question_id, key_answer) VALUES (%d, %d, %d, '%s')", $node->nid, $node->vid, $node->key_question_id, $node->key_answer);
}

/**
 * Implementation of hook_update().
 */
function pi_key_answers_update($node) {

	if ($node->revision) {
		pi_key_answers_insert($node);
	} else {
		db_query("UPDATE {pi_key_answers} SET key_question_id = %d, key_answer = '%s' WHERE vid = '%d'", $node->key_question_id, $node->key_answer, $node->vid);
	}
}

/**
 * Implementation of hook_delete().
 */
function pi_key_answers_delete(&$node) {
	// Delete the related information we were saving for this node.
	db_query('DELETE FROM {pi_key_answers} WHERE nid = %d', $node->nid);

	//Delete the corresponding data in the sort tabe if exists
	db_query('DELETE FROM {pi_sort_key_answers} WHERE key_answer = %d', $node->nid);
}

/**
 * Implementation of hook_load().
 */
function pi_key_answers_load($node) {
	return db_fetch_object(db_query('SELECT * FROM {pi_key_answers} WHERE vid = %d', $node->vid));
}

/**
 * Implementation of hook_view().
 */
function pi_key_answers_view($node, $teaser = FALSE, $page = FALSE) {

	// Use Drupal's default node view.
	$node = node_prepare($node, $teaser);

	if (!$teaser) {
		$key_question_node = node_load($node->key_question_id);
		if ($key_question_node) {
			$node->content['pi_key_question'] = array(
					'#value' => node_view($key_question_node, TRUE, TRUE),
					'#weight' => -1
			);
		}
	}
	$node->content['pi_key_answers'] = array(
			'#value' => theme('pi_key_answers', $node, $teaser),
			'#weight' => 0
	);

	return $node;
}

/**
 * MISSING
 * 
 * @return multitype:multitype:multitype:string   
 */
function pi_key_answers_theme() {
	return array(
			'pi_key_answers_node_form' => array(
					'arguments' => array('form'),
			),
			'pi_key_answers' => array(
					'arguments' => array('node', 'teaser'),
			),
	);
}

function theme_pi_key_answers_node_form($form) {
	$output .= drupal_render($form);
	return $output;
}

/**
 * MISSING
 * 
 * @param unknown_type $node
 * @return string
 */
function theme_pi_key_answers($node, $teaser) {
	$output = '<strong>' . t('Key answer:') . '</strong> ' . nl2br($node->key_answer);
	return $output;
}

