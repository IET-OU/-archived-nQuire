<?php
// $Id: pi_hypothesis.module,v 1.2 2009/06/11 09:55:10 ou_mbg Exp $

/**
 * @file
 * Module for creating "[pi_hypothesis" node type
 */


/**
 * Implementation of hook_node_info().
 */

function pi_hypothesis_node_info() {

  return array(
  	'pi_hypothesis' => array(
    'name' => t('Inquiry hypothesis'), // Required.
    'module' => 'pi_hypothesis',  // Required.
    'description' => t('What is your hypothesis?'), // Required.
    'has_title' => TRUE,
    'title_label' => t('Inquiry hypothesis'),
    'has_body' => TRUE,
    'body_label' => t('Hypothesis'),
    'locked' => TRUE)
   );
   
}


/**
 * Implementation of hook_perm().
 */

function pi_hypothesis_perm() {
  return array('create pi_hypothesis content', 'edit pi_hypothesis');
}

/**
 * Implementation of hook_access().
 */
function pi_hypothesis_access($op, $node) {
  global $user;
	$details = get_inquiry_details_from_current_path();
	
  if ($op == 'create') {
  	return check_node_function_of_activity ($details->inquiry_id, $details->activity_id, $user->uid, 'add');
    //return (user_access('create pi_hypothesis'));
  }

  if ($op == 'update' || $op == 'delete') {
  	return check_node_function_of_activity ($details->inquiry_id, $details->activity_id, $user->uid, 'edit');
    //return (user_access('edit own pi_hypothesis'));
  }
}

/**
 * Implementation of hook_form().
 */

function pi_hypothesis_form(&$node) {

  // Get metadata for this node type
  // (we use it for labeling title and body fields).
  // We defined this in pi_hypothesis_node_info().
  $type = node_get_types('type', $node);

  $form['title'] = array(
    '#type' => 'hidden',
    '#title' => check_plain($type->title_label),
    '#required' => FALSE,
    '#default_value' => check_plain($type->title_label),
    '#weight' => -5
  );

  $form['hypothesis'] = array(
    '#type' => 'textarea',
    '#title' => t('My hypothesis is '),
    '#required' => TRUE,
    '#default_value' => $node->hypothesis,
    '#resizable' => FALSE,
    '#rows' => 2,
    '#cols' => 40,
    '#weight' => -2
  );
  
  $prefix = "";
  $prefix .= "<p>A hypothesis is a prediction that you can test. Enter your hypothesis for this inquiry.</p>";
  
  $form['#prefix'] = $prefix;
  
  return $form;

}

/**
 * Implementation of hook_insert().
 */

 
function pi_hypothesis_insert($node) {
  db_query("INSERT INTO {pi_hypothesis} (nid, vid, hypothesis) VALUES ('%d', '%d', '%s')",
    $node->nid, $node->vid, $node->hypothesis);
}

/**
 * Implementation of hook_update().
 */

function pi_hypothesis_update($node) {
  if ($node->revision) {
    pi_hypothesis_insert($node);
  }
  
  else {
    db_query("UPDATE {pi_hypothesis} SET hypothesis = '%s' WHERE vid = %d", $node->hypothesis, $node->vid);
  }
}

/**
 * Implementation of hook_delete().
 */

function pi_hypothesis_delete(&$node) {
  // Delete the related information we were saving for this node.
  db_query('DELETE FROM {pi_hypothesis} WHERE nid = %d', $node->nid);
}

/**
 * Implementation of hook_load().
 */

function pi_hypothesis_load($node) {
  return db_fetch_object(db_query('SELECT * FROM {pi_hypothesis} WHERE vid = %d',
    $node->vid));
}

/**
 * Implementation of hook_view().
 */
function pi_hypothesis_view($node, $teaser = FALSE, $page = FALSE) {
  if (!$teaser) {
    // Use Drupal's default node view.
    $node = node_prepare($node, $teaser);

    $node->content['pi_hypothesis'] = array(
    '#value' => theme('pi_hypothesis', $node),
    '#weight' => 2
    );
      
  }

  if ($teaser) {
    // Use Drupal's default node view.
    $node = node_prepare($node, $teaser);
  }

  return $node;
}

function pi_hypothesis_theme() {
  return array(
    'pi_hypothesis' => array(
      'arguments' => array('node'),
    ),
  );
}


function theme_pi_hypothesis($node) {

  $output = '<p><strong>Your hypothesis is:</strong> ' . check_plain($node->hypothesis). '</p>';
  
  return $output;
}

