<?php

// $Id: pi_activity.install 2010/05/21 MCP $

/**
 * @file pi_activity module installer
 */

/**
 * Implementation of hook_install().
 */
function pi_activity_install() {
	// Create tables.
	drupal_install_schema('pi_activity');

	variable_set("og_content_type_usage_pi_activity", 'group_post');
	//Options are status, promote, sticky, revision
	variable_set("node_options_pi_activity", array('status', 'revision'));
	variable_set("comment_pi_activity", COMMENT_NODE_DISABLED);
	variable_set('upload_pi_activity', 0);
}

/**
 * Implementation of hook_uninstall().
 */
function pi_activity_uninstall() {
	// Remove tables.
	drupal_uninstall_schema('pi_activity');

	variable_del("og_content_type_usage_pi_activity");
	variable_del("node_options_pi_activity");
	variable_del("comment_pi_activity");
	variable_del("upload_pi_activity");
}

/**
 * Implementation of hook_schema for pi_activity module
 */
function pi_activity_schema() {
	$schema = array();
	$schema['pi_activity'] = array(
			'description' => 'PI Activity table with details about activities in nQuire.',
			'fields' => array(
					'nid' => array(
							'description' => 'Activity node id, used to be activity_id',
							'type' => 'int',
							'unsigned' => TRUE,
							'not null' => TRUE,
					),
					'vid' => array(
							'description' => 'Activity node id, used to be activity_id',
							'type' => 'int',
							'unsigned' => TRUE,
							'not null' => TRUE,
					),
					'phase_nid' => array(
							'description' => 'The phase this activity is associated with.',
							'type' => 'int',
							'unsigned' => TRUE,
							'not null' => TRUE,
					),
					'parent_activity' => array(
							'description' => 'If this activity is created by another activity, then it is referenced here.',
							'type' => 'int',
							'unsigned' => TRUE,
							'default' => NULL
					),
					'show_children_in_phase' => array(
							'description' => 'If this activity creates child activities then if they are to be shown in the phase view, it will be set here.',
							'type' => 'int',
							'size' => 'tiny',
							'not null' => TRUE,
					),
					'referenced_node' => array(
							'type' => 'varchar',
							'length' => 255,
							'default' => NULL,
							'description' => 'If the activity directly references a single node, it is set here.'
					),
					'activity_type' => array(
							'type' => 'varchar',
							'length' => 64,
							'not null' => FALSE,
							'description' => 'What kind of node type is this activity working with.'
					),
					'show_activity' => array(
							'type' => 'int',
							'size' => 'tiny',
							'not null' => TRUE,
							'description' => 'Show the activity in the phase list or not: true/false.'
					),
					'node_type' => array(
							'type' => 'varchar',
							'length' => 255,
							'not null' => TRUE,
							'default' => '',
							'description' => 'Node type - content type of a node created/used in an activity.'
					),
					'parameters' => array(
							'type' => 'text',
							'not null' => TRUE,
							'size' => 'big',
							'description' => 'Parameters needed to create/use a node in an activity (optional).'
					),
					'destination_after' => array(
							'type' => 'varchar',
							'length' => 255,
							'not null' => TRUE,
							'default' => '',
							'description' => 'destination - form destination page after submission e.g. phase, self.'
					),
					'audience' => array(
							'type' => 'varchar',
							'length' => 255,
							'not null' => TRUE,
							'description' => 'audience - intended audience category for a created node e.g. individual, group, class, multiclass.'
					),
					'actor' => array(
							'description' => 'og group nid of the actor group',
							'type' => 'int',
							'unsigned' => TRUE,
							'not null' => TRUE,
					),
					'weight' => array(
							'description' => 'The default layout order in the phase list.',
							'type' => 'int',
							'size' => 'normal',
							'unsigned' => TRUE,
							'not null' => TRUE,
							'default' => 0
					)
			),
			'primary key' => array('nid', 'vid'),
			'indexes' => array(
					'nid' => array('nid'),
					'vid' => array('vid'),
					'phase_nid' => array('phase_nid'),
					'activity_type' => array('activity_type'),
					'actor' => array('actor')
			)
	);

	$schema['pi_activity_stage_state'] = array(
			'description' => 'State of an activity in a particular stage',
			'fields' => array(
					'pass_id' => array(
							'description' => 'Primary key: Id column for this table',
							'type' => 'serial',
							'unsigned' => TRUE,
							'not null' => TRUE,
					),
					'activity_nid' => array(
							'description' => 'Activity node id for this stage-state definition',
							'type' => 'int',
							'unsigned' => TRUE,
							'not null' => TRUE,
							'default' => 0
					),
					'stage_nid' => array(
							'description' => 'Stage node id for this stage-state definition',
							'type' => 'int',
							'unsigned' => TRUE,
							'not null' => TRUE,
							'default' => 0
					),
					'stage_state' => array(
							'type' => 'varchar',
							'length' => 64,
							'not null' => TRUE,
							'default' => 'shown',
							'description' => 'Activity state: the visible state of the activity in this stage'
					)
			),
			'primary key' => array('pass_id'),
			'indexes' => array(
					'activity_id' => array('activity_nid'),
					'stage_nid' => array('stage_nid'),
			)
	);

	$schema['pi_activity_enter_focus'] = array(
			'description' => 'PI activity enter focus',
			'fields' => array(
					'paef_id' => array(
							'type' => 'serial',
							'size' => 'normal',
							'unsigned' => TRUE,
							'not null' => TRUE,
							'default' => NULL,
							'description' => ''
					),
					'activity_type' => array(
							'type' => 'varchar',
							'length' => 64,
							'not null' => FALSE,
							'description' => ''
					),
					'inquiry_id' => array(
							'type' => 'int',
							'size' => 'normal',
							'unsigned' => TRUE,
							'not null' => FALSE,
							'default' => NULL,
							'description' => ''
					),
					'activity_id' => array(
							'type' => 'int',
							'size' => 'normal',
							'unsigned' => TRUE,
							'not null' => FALSE,
							'default' => NULL,
							'description' => ''
					),
					'node_function' => array(
							'type' => 'varchar',
							'length' => 32,
							'not null' => TRUE,
							'description' => ''
					),
					'visible_status' => array(
							'type' => 'varchar',
							'length' => 32,
							'not null' => TRUE,
							'description' => ''
					),
					'prior_nf' => array(
							'type' => 'varchar',
							'length' => 32,
							'not null' => FALSE,
							'description' => ''
					),
					'prior_vs' => array(
							'type' => 'varchar',
							'length' => 32,
							'not null' => FALSE,
							'description' => ''
					)
			),
			'primary key' => array('paef_id'),
			'indexes' => array(
					'activity_type' => array('activity_type'),
					'inquiry_id' => array('inquiry_id'),
					'activity_id' => array('activity_id'),
					'prior_nf' => array('prior_nf'),
					'prior_vs' => array('prior_vs')
			)
	);

	$schema['pi_activity_leave_focus'] = array(
			'description' => 'PI activity leave focus',
			'fields' => array(
					'palf_id' => array(
							'type' => 'int',
							'size' => 'normal',
							'unsigned' => TRUE,
							'not null' => TRUE,
							'default' => NULL,
							'description' => ''
					),
					'activity_type' => array(
							'type' => 'varchar',
							'length' => 64,
							'not null' => FALSE,
							'description' => ''
					),
					'inquiry_id' => array(
							'type' => 'int',
							'size' => 'normal',
							'unsigned' => TRUE,
							'not null' => FALSE,
							'default' => NULL,
							'description' => ''
					),
					'activity_id' => array(
							'type' => 'int',
							'size' => 'normal',
							'unsigned' => TRUE,
							'not null' => FALSE,
							'default' => NULL,
							'description' => ''
					),
					'node_function' => array(
							'type' => 'varchar',
							'length' => 32,
							'not null' => TRUE,
							'description' => ''
					),
					'visible_status' => array(
							'type' => 'varchar',
							'length' => 32,
							'not null' => TRUE,
							'description' => ''
					),
					'prior_nf' => array(
							'type' => 'varchar',
							'length' => 32,
							'not null' => FALSE,
							'description' => ''
					),
					'prior_vs' => array(
							'type' => 'varchar',
							'length' => 32,
							'not null' => FALSE,
							'description' => ''
					)
			),
			'primary key' => array('palf_id'),
			'indexes' => array(
					'activity_type' => array('activity_type'),
					'inquiry_id' => array('inquiry_id'),
					'activity_id' => array('activity_id'),
					'prior_nf' => array('prior_nf'),
					'prior_vs' => array('prior_vs')
			)
	);

	$schema['pi_activity_node'] = array(
			'description' => 'PI Activity node - references to activity content in nQuire',
			'fields' => array(
					'pan_id' => array(
							'type' => 'serial',
							'size' => 'normal',
							'unsigned' => TRUE,
							'not null' => TRUE,
							'description' => 'Primary Key: Unique category ID'),
					'activity_id' => array(
							'type' => 'int',
							'size' => 'normal',
							'unsigned' => TRUE,
							'not null' => TRUE,
							'description' => 'Activity id.'),
					'nid' => array(
							'type' => 'int',
							'size' => 'normal',
							'unsigned' => TRUE,
							'not null' => TRUE,
							'description' => 'Node id.'),
					'collaboration' => array(
							'type' => 'text',
							'size' => 'small',
							'description' => 'Collaboration mode'),
					'actor' => array(
							'type' => 'int',
							'size' => 'normal',
							'unsigned' => TRUE,
							'not null' => FALSE,
							'description' => 'Actor id.'),
			),
			'primary key' => array('pan_id'),
			//@TODO FIXME inquiry_id is not a valid comumn !
			'indexes' => array(//'inquiry_id' => array('inquiry_id'),
					'activity_id' => array('activity_id'),
					'nid' => array('nid')
			),
	);

	$schema['pi_activity_preference'] = array(
			'description' => 'PI Activity Preference',
			'fields' => array(
					'pap_id' => array(
							'type' => 'serial',
							'size' => 'normal',
							'unsigned' => TRUE,
							'not null' => TRUE,
							'description' => ''),
					'show_activity' => array(
							'type' => 'int',
							'size' => 'tiny',
							'description' => ''),
					'uid' => array(
							'type' => 'int',
							'size' => 'normal',
							'unsigned' => TRUE,
							'not null' => FALSE,
							'default' => NULL,
							'description' => 'User id'),
					'gid' => array(
							'type' => 'int',
							'unsigned' => TRUE,
							'not null' => FALSE,
							'default' => NULL,
							'size' => 'normal',
							'description' => 'Group id')
			),
			'primary key' => array('pap_id'),
			'indexes' => array('uid' => array('uid', 'gid')
			)
	);

	$schema['pi_activity_status'] = array(
			'description' => 'PI Activity status: current state of an activity in nQuire for user, group or global',
			'fields' => array(
					'pas_id' => array(
							'type' => 'serial',
							'size' => 'normal',
							'unsigned' => TRUE,
							'not null' => TRUE,
							'description' => 'Primary Key: Unique category ID.'
					),
					'activity_id' => array(
							'type' => 'int',
							'size' => 'normal',
							'unsigned' => TRUE,
							'not null' => FALSE,
							'description' => 'Activity id.'
					),
					'uid' => array(
							'type' => 'int',
							'size' => 'normal',
							'unsigned' => TRUE,
							'not null' => FALSE,
							'default' => NULL,
							'description' => 'User id.'
					),
					'gid' => array(
							'type' => 'int',
							'size' => 'normal',
							'unsigned' => TRUE,
							'not null' => FALSE,
							'default' => NULL,
							'description' => 'Group id.'),
					'node_function' => array(
							'type' => 'varchar',
							'length' => 255,
							'not null' => FALSE,
							'default' => '',
							'description' => 'node_function - type of drupal node function i.e. add, edit, view.'),
					'visible_status' => array(
							'type' => 'varchar',
							'length' => 255,
							'not null' => FALSE,
							'default' => '',
							'description' => 'visible_status - type of icon used for an activity link i.e. start, in_progress, view, unavailable.'
					)
			),
			'primary key' => array('pas_id'),
			'indexes' => array(
					'activity_id' => array('activity_id'),
					'uid' => array('uid'),
					'gid' => array('gid'),
					'visible_status' => array('visible_status')
			)
	);

	/*
	  $schema['pi_previous_activity_status'] = array(
	  'description' => 'PI previous activity status',
	  'fields' =>	array(
	  'pas_id' =>	array(
	  'type' => 'int',
	  'unsigned' => TRUE,
	  'not null' => TRUE,
	  'default' => NULL,
	  'description' => '' ),
	  'inquiry_id' =>	array(
	  'type' => 'int',
	  'unsigned' => TRUE,
	  'not null' => TRUE,
	  'default' => NULL,
	  'description' => '' ),
	  'activity_id' =>	array(
	  'type' => 'int',
	  'unsigned' => TRUE,
	  'not null' => TRUE,
	  'default' => NULL,
	  'description' => '' ),
	  'uid' => array(
	  'type' => 'int',
	  'unsigned' => TRUE,
	  'not null' => TRUE,
	  'default' => NULL,
	  'description' => 'User id' ),
	  'gid' => array(
	  'type' => 'int',
	  'unsigned' => TRUE,
	  'not null' => TRUE,
	  'default' => NULL,
	  'description' => 'Group id' ),
	  'node_function' => array(
	  'type' => 'varchar',
	  'length' => 255,
	  'not null' => TRUE,
	  'default' => '',
	  'description' => 'node_function - type of drupal node function i.e. add, edit, view.' ),
	  'visible_status' => array(
	  'type' => 'varchar',
	  'length' => 255,
	  'not null' => TRUE,
	  'default' => '',
	  'description' => 'visible_status - type of icon used for an activity link i.e. start, in_progress, view, unavailable.' ) ),
	  'indexes' => 		array(	'pas_id' => array('pas_id'),
	  'node_function' => array('node_function') 	),
	  );
	 */

	return $schema;
}
