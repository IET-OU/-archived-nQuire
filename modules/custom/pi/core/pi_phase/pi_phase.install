<?php
// $Id: pi_phase.install,v 0.1 MCP$

/**
 * Implementation of hook_install().
 */
function pi_phase_install() {
	// Create tables.
	drupal_install_schema('pi_phase');
	//Options are status, promote, sticky, revision
	variable_set("node_options_pi_phase", array('status'));
	variable_set("comment_pi_phase", COMMENT_NODE_DISABLED);
	variable_set('upload_pi_phase', 0);
}

/**
 * Implementation of hook_uninstall().
 */
function pi_phase_uninstall() {
	// Remove tables.
	drupal_uninstall_schema('pi_phase');
	//Options are status, promote, sticky, revision
	variable_del("node_options_pi_phase");
	variable_del("comment_pi_phase");
	variable_del('upload_pi_phase');
}

/**
 * Implementation of hook_schema().
 */
function pi_phase_schema() {
  $schema = array();

  $schema['pi_phase'] = array(
	'description' => 'PI Inquiry Phase',
	'fields' => array(
	  'nid' => array(
		'description' => 'node id',
		'type' => 'int',
		'unsigned' => TRUE,
		'not null' => TRUE,
		'default' => 0 ),
	  'vid' => array(
		'description' => 'The current vid version identifier',
		'type' => 'int',
		'unsigned' => TRUE,
		'not null' => TRUE,
		'default' => 0 ),
	  'inquiry_nid' => array(
		'description' => 'The nid for the inquiry this phase is attached to.',
		'type' => 'int',
		'unsigned' => TRUE,
		'not null' => TRUE,
		'default' => 0 ),
	  'phase_actor' => array(
       	'type' => 'int',		
       	'unsigned' => TRUE,
       	'not null' => FALSE,
       	'default' => NULL,
       	'description' => 'The phase actor group id.'),
	  'weight' => array(
		'description' => 'The default layout order of the phase in the inquiry.',
		'type' => 'int',
		'unsigned' => TRUE,
		'not null' => TRUE,
		'default' => 0 ) ),
	'primary key' => array('nid', 'vid'),
	'unique keys' => array( 'vid' => array('vid') ),
	'indexes' => array( 'nid' => array('nid') )
  );
	
		
/*
	$schema['pi_phase_preference'] = array(
	'description' => 'PI Phase Preference.',
	'fields' =>	array( 
		'plp_id' =>	array( 
			'type' => 'serial',
			'unsigned' => TRUE,
			'not null' => TRUE,
			'default' => NULL,
			'length' => 10,
	 		'description' => '' ),
      	'layout' => array(
      		'type' => 'varchar',
			'length' => 255,
			'not null' => TRUE,
			'description' => '' ),
		'inquiry_id' => array(
        	'type' => 'int',
			'length' => 10,	
        	'unsigned' => TRUE,
	        'not null' => FALSE,
    	    'description' => 'PI Inquiry id'	),
		'uid' => array(
			'type' => 'int',
			'unsigned' => TRUE,
			'not null' => FALSE,
			'default' => NULL,
			'description' => 'User id' ),
		'gid' => array(
			'type' => 'int',
			'unsigned' => TRUE,
			'not null' => FALSE,
			'default' => NULL,
			'description' => 'Group id' )	),
	'primary key' =>	array(	'plp_id')
	);
*/
	$schema['pi_phase_preference'] = array(
	'description' => 'PI Phase Preference.',
	'fields' =>	array( 
		'ppp_id' =>	array( 
		  'type' => 'serial',
		  'unsigned' => TRUE,
  	      'not null' => TRUE,
		  'description' => '' ),
      	'show_phase' => array(
      	  'type' => 'blob',
	      'size' => 'normal',
  		  'description' => '' ),
		'uid' => array(
		  'type' => 'int',
		  'unsigned' => TRUE,
		  'not null' => TRUE,
		  'default' => NULL,
		  'description' => 'User id' ),
		'gid' => array(
		  'type' => 'int',
		  'unsigned' => TRUE,
		  'not null' => TRUE,
		  'default' => NULL,
		  'description' => 'Group id')
	),
	'primary key' =>	array(	'ppp_id'),
    'indexes' => 		array(	'uid' => array('uid'),
      							'gid' => array('gid') 	),
	);
	return $schema;
}


/**
 * Implementation of hook_schema().
 */
function pi_phase_update_6000()
{
  //Get the new schema definition and make sure cache is updated
  $return_value = null;
  $schema = pi_phase_schema();
  db_add_field($return_value, 'pi_phase', 'phase_actor', $schema['pi_phase']['fields']['phase_actor']);
  //rebuild the schema cache after the change
  $new_schema = drupal_get_schema('pi_phase', true);
  $query = "SELECT * FROM {pi_phase_actor} ORDER BY 'phase_id'";
  $result = db_query($query);
  while($actor = db_fetch_array($result))
  {
    $phase = node_load($actor['phase_id']);
    //pi_debug_message($actor);
    if($phase && ($actor['gid'] != null))
    {
      if($phase->type == 'pi_phase')
      {
        $phase->phase_actor = $actor['gid'];
        //pi_debug_message($phase);
        node_save($phase);
      }
      else
      {
        drupal_set_message(t(
        'Phase actor %ppa referenced a %type, not an Phase - not upgraded.',
          array('%ppa' => $actor['ppa_id'], '%type' => $phase->type)));
      }
    }
    else
    {
      if($phase==false)
      {
        drupal_set_message(t('Phase actor %ppa, did not reference an existing node - not upgraded.',
          array('%ppa' => $actor['ppa_id'])));
      }
      if($actor['gid'] != null)
      {
        drupal_set_message(t('Phase actor %ppa, did not reference a group - not upgraded.',
          array('%ppa' => $actor['ppa_id'])));
      }
    }
  }
  db_drop_table($return_value, 'pi_phase_actor'); 
  return $return_value;
}
