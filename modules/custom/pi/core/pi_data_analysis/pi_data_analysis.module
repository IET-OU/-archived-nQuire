<?php
// $Id$

/**
 * @file
 * Module for creating "pi_data_analysis" node type
 */

/**
 * Implementation of pi_data_node_info().
 */
function pi_data_analysis_node_info() {
  // We return an array since a module can define multiple node types.
  // We're only defining one node type, type 'pi_data_analysis'.
  return array(
    'pi_data_analysis' => array(
      'name' => t('Data_analysis'), // Required.
      'module' => 'pi_data_analysis',  // Required.
      'description' => t('This module provides support for analysing data.'), // Required.
      'has_title' => FALSE,
      'title_label' => t('Data analysis'),
      'has_body' => FALSE,
      'body_label' => t('Description'),
      'locked' => '1',
    )
  );
}

/**
 * Implementation of data_analysis_perm().
 */
function pi_data_analysis_perm() {
  return array('create pi_data_analysis', 'edit own pi_data_analysis');
}

/**
 * Implementation of data_analysis_access().
 */
function pi_data_analysis_access($op, $node) {
  global $user;

  if ($op == 'create') {
    return (user_access('create pi_data_analysis'));
  }

  if ($op == 'update' || $op == 'delete') {
    return (user_access('edit own pi_data_analysis'));
  }
}

/**
 * Implementation of data_analysis_form().
 */
function pi_data_analysis_form(&$node) {

  drupal_set_title(t('Data analysis'));
  global $user;
  // Get metadata for this node type
  // (we use it for labeling title and body fields).
  // We defined this in pi_data_analysis_node_info().
  $type = node_get_types('type', $node);

  if (arg(1) == "add") {
    $inquiry_id = arg(3)|1;
    $hypothesis_nid = arg(4)|0;
    $key_question_id = arg(5);
  }
  else {
    $inquiry_id = $node->inquiry_id;
    $hypothesis_nid = $node->hypothesis_nid;
    $key_question_id = $node->key_question_id;
  };
  
  $audience_gid = find_student_group_gid($user);
  
  // TDC - need to retrieve for all class measures (otherwise could select unused measures)
  $results = db_query("SELECT nid,title FROM node WHERE type = 'pi_available_measures' AND status = '1'");
  $options = array();
  
  while ($result = db_fetch_array($results)) {
    $options[$result['nid']] = $result['title'];
  }
  
  $form['title'] = array(
    '#type' => 'hidden',
    '#title' => check_plain($type->title_label),
    '#required' => FALSE,
    '#default_value' => check_plain($type->title_label)
  );
  $form['body_filter']['body'] = array(
    '#type' => 'hidden',
    '#title' => check_plain($type->body_label),
    '#required' => FALSE,
    '#default_value' => $node->body,
    '#resizable' => FALSE
  );
  $form['inquiry_id'] = array(
    '#type' => 'hidden',
    '#title' => 'inquiry_id',
    '#required' => FALSE,
    '#default_value' => $inquiry_id
  );
  $form['hypothesis_nid'] = array(
    '#type' => 'hidden',
    '#title' => 'hypothesis_nid',
    '#required' => FALSE,
    '#default_value' => $hypothesis_nid
  );
  $form['key_question_id'] = array(
    '#type' => 'hidden',
    '#title' => 'key_question_id',
    '#required' => FALSE,
    '#default_value' => $key_question_id
  );
    
  $form['textarea_fieldset'] = array(
    '#title' => t('Data selection'),
    '#type' => 'fieldset'
  );
  
  $form['textarea_fieldset']['selected_measures'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Available measurements'),
    '#required' => TRUE,
    '#multiple' => TRUE,
    '#default_value' => explode(",", $node->selected_measures),
    '#options' => $options,
    '#weight' => 5
  );
  
  $form['textarea_fieldset']['prediction'] = array(
    '#type' => 'textarea',
    '#title' => t('Prediction or expectation'),
    '#required' => TRUE,
    '#default_value' => check_plain($node->prediction),
    '#resizable' => FALSE,
    '#rows' => 3,
    '#cols' => 40,
    '#weight' => 10
  );
  
  $prefix = "";
   
  if ($hypothesis_nid) {
    $hypothesis_node = node_load($hypothesis_nid);
    $prefix .= "<h3>Hypothesis</h3>";
  	$prefix .= "<p>" . $hypothesis_node->hypothesis . "</p>";
    $prefix .= "<h3>Key Question $key_question_id</h3>";
  	$prefix .= "<p>" . $hypothesis_node->{'key_question_' . $key_question_id} . "</p>";
  };
   
  $form['#prefix'] = $prefix;
  
  unset($form['delete']);

  return $form;
}

/**
 * Implementation of hook_validate().
 */
function pi_data_analysis_validate($node) {
  // Enforce a minimum selection of 1.
  if (isset($node->selected_measures) && count($node->selected_measures) < 1) {
    form_set_error('selected_measures', t('You need to select at least one measure.'));
  };
}

/**
 * Implementation of pi_data_analysis_insert().
 */
function pi_data_analysis_insert($node) {
  $new_selected_measures = array();
  foreach ($node->selected_measures as $measure) {
  	if ($measure != 0) {
  		$new_selected_measures[] = $measure;
  	};
  };
  db_query("INSERT INTO {pi_data_analysis} (nid, vid, inquiry_id, hypothesis_nid, key_question_id, selected_measures, prediction) VALUES (%d, %d, %d, %d, %d, '%s', '%s')", $node->nid, $node->vid, $node->inquiry_id, $node->hypothesis_nid, $node->key_question_id, implode(",", $new_selected_measures), $node->prediction);
  $node->promote = 0;
}

/**
 * Implementation of pi_data_update().
 */
function pi_data_analysis_update($node) {
  if ($node->revision) {
    pi_available_data_analysis_insert($node);
  }
  else {
    $new_selected_measures = array();
    foreach ($node->selected_measures as $measure) {
    	if ($measure != 0) {
    		$new_selected_measures[] = $measure;
    	};
    };
    $query = "UPDATE {pi_data_analysis} SET ";
    $query .= "inquiry_id = '" . $node->inquiry_id . "', ";
    $query .= "hypothesis_nid = '" . $node->hypothesis_nid . "', ";
    $query .= "key_question_id = '" . $node->key_question_id . "', ";
    $query .= "selected_measures = '" . implode(",", $new_selected_measures) . "', ";
    $query .= "prediction = '" . $node->prediction . "' ";
    $query .= "WHERE vid = '" . $node->vid . "'";
    db_query($query);
  };
}

/**
 * Implementation of pi_data_delete().
 */
function pi_data_analysis_delete(&$node) {
  db_query('DELETE FROM {pi_data_analysis} WHERE nid = %d', $node->nid);
}

/**
 * Implementation of pi_data_load().
 */
function pi_data_analysis_load($node) {
  return db_fetch_object(db_query('SELECT * FROM {pi_data_analysis} WHERE vid = %d',
    $node->vid));
}

/**
 * Implementation of pi_data_view().
 */
function pi_data_analysis_view($node, $teaser = FALSE, $page = FALSE) {
  if (!$teaser) {
    // Use Drupal's default node view.
    $node = node_prepare($node, $teaser);

    $node->content['pi_data_analysis'] = array(
      '#value' => theme('pi_data_analysis', $node),
      '#weight' => 2
    );
  }

  if ($teaser) {
    // Use Drupal's default node view.
    $node = node_prepare($node, $teaser);
  }

  return $node;
}

/**
 * MISSING
 * 
 * @return multitype:multitype:multitype:string   
 */
function pi_data_analysis_theme() {
  return array(
    'pi_data_analysis' => array(
      'arguments' => array('node'),
    ),
  );
}

/**
 * MISSING
 * 
 * @param unknown_type $node
 * @return string
 */
function theme_pi_data_analysis($node) {

  $output = '';
  
  $data_analysis = db_fetch_object(db_query("SELECT nid FROM pi_activity_node WHERE activity_id = '12'"));
  $data_analysis_nid = $data_analysis->nid;
  
  $data_export_nid = 182; // TDC - This should be dynamic

  $hypothesis_node = node_load($node->hypothesis_nid);

	$output .= "<p>";
	$output .= "<b>Hypothesis</b>: ";
  $output .= $hypothesis_node->hypothesis;
  $output .= "</p>";
  
	$output .= "<p>";
  $output .= "<b>Key Question " . $node->key_question_id . "</b>: ";
  $output .= $hypothesis_node->{'key_question_' . $node->key_question_id};
  $output .= "</p>";
  
	$output .= "<p>";
	$output .= "<b>Prediction</b>: ";
  $output .= $node->prediction;
  $output .= "</p>";

  global $user;
  $data_values_nh = pi_data_selected_measures_table ($user, 4, $node->selected_measures, "measures", 1);
  $data_values_mk = pi_data_selected_measures_table ($user, 5, $node->selected_measures, "measures", 1);;
  
  // use first data row as data headings
  
  $data_headings_nh = $data_values_nh[0];
  array_shift($data_values_nh);
  
  $data_headings_mk = $data_values_mk[0];
  array_shift($data_values_mk);
  
  $output .= "<h3>Northampton data</h3>";
  $output .= "<div style='display: block; width: 100%'>" . theme('table', $data_headings_nh, $data_values_nh) . "</div>";
  
  $output .= "<p>";
  $output .= l('Download Northampton data file [csv]', 'node/' . $data_export_nid . '/analysis/csv/4/' . $node->nid);
  $output .= "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
  $output .= l('Download Northampton map file [kml]', 'node/' . $data_export_nid . '/analysis/kml/4/' . $node->nid);
  $output .= "</p>";
     
  $output .= "<h3>Milton Keynes data</h3>";
  $output .= "<div style='display: block; width: 100%'>" . theme('table', $data_headings_mk, $data_values_mk) . "</div>";
  
  $output .= "<p>";
  $output .= l('Download Milton Keynes data file [csv]', 'node/' . $data_export_nid . '/analysis/csv/5/' . $node->nid);
  $output .= "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
  $output .= l('Download Milton Keynes map file [kml]', 'node/' . $data_export_nid . '/analysis/kml/5/' . $node->nid);
  $output .= "</p>";
  
	$output .= "<p>";
  $output .= l('Return to Data analysis','/node/' . $data_analysis_nid . '/view');
	$output .= "<p>";

  return $output;
}


/**
 * MISSING
 * 
 * @param unknown_type $user
 * @return string
 */
function pi_data_analysis_overview($user) {

  $output = "";
  $inquiry_id = 1;
  
  $hypothesis = db_fetch_object(db_query("SELECT nid FROM node WHERE node.type = 'pi_hypothesis' AND status = '1' AND node.uid = '%d' ORDER BY vid DESC", $user->uid));

  if (isset($hypothesis) AND is_numeric($hypothesis->nid) AND ($hypothesis->nid >= 1)) {

    $hypothesis_node = node_load($hypothesis->nid);
    
  	$output .= "<h3>Hypothesis</h3>";
  	$output .= "<p>";
    $output .= $hypothesis_node->hypothesis;
    $output .= "</p>";
    
    for ($i = 1; $i <=6; $i++) {
  
      if ($hypothesis_node->{'key_question_' . $i}) {
  
        $output .= "<hr />";
    
        $output .= "<h4>Key Question " . $i . "</h4>";
      	$output .= "<p>";
        $output .= $hypothesis_node->{'key_question_' . $i};
        $output .= "</p>";
              
        $data_analysis_for_question = db_query("SELECT * FROM node LEFT JOIN pi_data_analysis ON (node.nid = pi_data_analysis.nid AND node.vid = pi_data_analysis.vid) WHERE node.type = 'pi_data_analysis' AND node.status = '1' AND node.uid = '%d' AND pi_data_analysis.key_question_id = '%d' ORDER BY node.vid DESC", $user->uid, $i);
               
        $analysis_table = array();
        
        $num_analysis_tables = db_num_rows($data_analysis_for_question);

        if ($num_analysis_tables == 0) {
        
          $output .= "<p>";
        	$output .= "<b>No analysis tables have been created for this key question</b>";
          $output .= "&nbsp;&nbsp;" . l('create one',"node/add/pi_data_analysis/" . $inquiry_id . "/" . $hypothesis->nid . "/" . $i);
          $output .= "</p>";
        
        }
        else {
        
          $counter = $num_analysis_tables;
          while ($data_table = db_fetch_object($data_analysis_for_question)) {
                  
            $measures = "";  
            $delim = "";
            
            $analysis_table_row = array();
        
            foreach (explode(',', $data_table->selected_measures) as $measure_nid) {
              $measures .= $delim . db_result(db_query("SELECT symbol FROM pi_available_measures WHERE nid = %d", $measure_nid));
              $delim = ", ";
            };  
           
            $analysis_table_row[] = $i . "." . $counter . ".&nbsp;&nbsp;" . substr($measures . " - " . $data_table->prediction ,0,48) . "...";
            $analysis_table_row[] = "&nbsp;&nbsp;&nbsp;&nbsp;" . l('view',"node/" . $data_table->nid . "/view") ;
            $analysis_table_row[] = "&nbsp;&nbsp;&nbsp;&nbsp;" . l('edit',"node/" . $data_table->nid . "/edit") ;
    
            $analysis_table[] = $analysis_table_row;
            $counter--;
          };
          
          $output .= "<p>";
          if ($num_analysis_tables == 1) {
        	  $output .= "<b>$num_analysis_tables analysis table has been created for this key question</b>";
          }
          else {
            $output .= "<b>$num_analysis_tables analysis tables have been created for this key question</b>";
          };
          $output .= "&nbsp;&nbsp;".  l('create another',"node/add/pi_data_analysis/" . $inquiry_id . "/" . $hypothesis->nid . "/" . $i);
          $output .= "</p>";
          
          $headings = array("<b>Data analysis tables</b>", '', '');
          $output .= theme('table', $headings, $analysis_table);

        };
      };
    };
  }
  else {
    $output .= t('<p><b>No hypothesis has been submitted</b></p>');
    $output .= t('<p>You must enter your hypothesis and at least one key question before you analyse your data.</p>');
  };
  
  return $output;
  
}

/**
 * MISSING
 * 
 * @param unknown_type $user
 * @return string
 */
function pi_class_data($user) {

  $output = '';
  
  $data_export_nid = 182; // TDC - This should be dynamic
  $selected_measures = "96,98,100,102,185,186,187,188,189"; // TDC - This should be dynamic
  
  global $user;
  $data_values_nh = pi_data_selected_measures_table ($user, 4, $selected_measures, "measures", 1);
  $data_values_mk = pi_data_selected_measures_table ($user, 5, $selected_measures, "measures", 1);;
  
  // use first data row as data headings
  
  $data_headings_nh = $data_values_nh[0];
  array_shift($data_values_nh);
  
  $data_headings_mk = $data_values_mk[0];
  array_shift($data_values_mk);
  
  $output .= "<h3>Northampton data</h3>";
  $output .= "<div style='display: block; width: 100%'>" . theme('table', $data_headings_nh, $data_values_nh) . "</div>";
  
  $output .= "<p>";
  $output .= l('Download Northampton data file [csv]', 'node/' . $data_export_nid . '/class/csv/4');
  $output .= "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
  $output .= l('Download Northampton map file [kml]', 'node/' . $data_export_nid . '/class/kml/4');
  $output .= "</p>";
     
  $output .= "<h3>Milton Keynes data</h3>";
  $output .= "<div style='display: block; width: 100%'>" . theme('table', $data_headings_mk, $data_values_mk) . "</div>";
  
  $output .= "<p>";
  $output .= l('Download Milton Keynes data file [csv]', 'node/' . $data_export_nid . '/class/csv/5');
  $output .= "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";
  $output .= l('Download Milton Keynes map file [kml]', 'node/' . $data_export_nid . '/class/kml/5');
  $output .= "</p>";
  
  return $output;

}
