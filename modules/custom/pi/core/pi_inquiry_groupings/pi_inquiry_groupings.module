<?php

function pi_inquiry_groupings_get_inquiry_group($inquiry_node) {
	return $inquiry_node->actor_gid;
}

function pi_inquiry_groupings_get_selection_type($inquiry_node) {
	return $inquiry_node->participants_selection;
}

function pi_inquiry_groupings_get_cohort_og($inquiry_node) {
	return $inquiry_node->participants_cohort;
}

function pi_inquiry_groupings_check_group($inquiry_node, $group_nid = FALSE) {
	if ($group_nid) {
		$group = node_load($group_nid);
		if ($group && $group->parent === $inquiry_node->actor_gid) {
			return array(
					'type' => 'group',
					'gid' => $group_nid,
					'group' => $group,
					'normal_management' => $inquiry_node->group_creation === 'normal',
					'manager' => $inquiry_node->group_creation === 'normal' ? $group->uid : $inquiry_node->uid,
					'inquiry_node' => $inquiry_node,
			);
		} else {
			return FALSE;
		}
	} else {
		return array(
				'type' => 'inquiry',
				'gid' => $inquiry_node->actor_gid,
				'manager' => $inquiry_node->uid,
				'normal_management' => TRUE,
				'group' => node_load($inquiry_node->actor_gid),
				'inquiry_node' => $inquiry_node,
		);
	}
}

function pi_inquiry_groupings_get_join_mode($group_nid) {
	$og = node_load($group_nid);
	return $og->og_selective;
}

function pi_inquiry_groupings_get_join_mode_for_inquiry_nid($inquiry_nid) {
	$inquiry = node_load($inquiry_nid);
	return pi_inquiry_groupings_get_join_mode($inquiry->actor_gid);
}

function pi_inquiry_groupings_get_normal_groups() {
	$query = "SELECT {node}.nid FROM {nquire_group} LEFT JOIN {node} ON {node}.vid={nquire_group}.vid WHERE {nquire_group}.group_type=%d";
	$result = db_query($query, NQUIRE_GROUP_TYPE_NORMAL);

	$groups = array();
	while ($row = db_fetch_array($result)) {
		$node = node_load($row['nid']);
		og_load_group($node);
		$groups[$node->nid] = check_plain($node->og_description);
	}

	return $groups;
}

function pi_inquiry_groupings_get_allowed_participants_for_inquiry($inquiry_node) {
	return pi_inquiry_groupings_get_allowed_participants($inquiry_node->participants_selection, $inquiry_node->uid, $inquiry_node->participants_cohort);
}

function pi_inquiry_groupings_get_allowed_participants($selection_type, $owner_uid, $cohort) {
	if ($selection_type === 'justme') {
		return array($owner_uid);
	} else if ($selection_type === 'group') {
		$members = nquire_group_get_member_uids($cohort);
		if (!in_array($owner_uid, $members)) {
			$members[] = $owner_uid;
		}
		return $members;
	} else {
		return FALSE;
	}
}

function pi_inquiry_groupings_has_collaboration_phases($inquiry_nid, $collaboration_type) {
	$query = "SELECT EXISTS(SELECT 1 FROM {node} LEFT JOIN {pi_phase} ON node.`vid`= pi_phase.`vid` WHERE inquiry_nid = %d AND collaboration='%s') AS e";
	$result = db_query($query, $inquiry_nid, $collaboration_type);
	$row = db_fetch_array($result);
	return $row && $row['e'];
}

function pi_inquiry_groupings_get_groups_for_user($uid, $group_type) {
	$groups_query = "SELECT {nquire_group}.nid, {og_uid}.is_active FROM {nquire_group} "
					. "LEFT JOIN {node} ON {node}.vid={nquire_group}.vid "
					. "LEFT JOIN {og_uid} ON {og_uid}.nid={nquire_group}.nid "
					. "WHERE {nquire_group}.group_type=%d AND {og_uid}.uid=%d";

	$user_groups = array(
			'active' => array(),
			'inactive' => array(),
	);

	$result = db_query($groups_query, $group_type, $uid);
	while ($row = db_fetch_array($result)) {
		$user_groups[$row['is_active'] ? 'active' : 'inactive'][] = $row['nid'];
	}

	return $user_groups;
}

function pi_inquiry_groupings_get_inquiries_for_groups($group_nids) {
	$inquiry_nids = array();
	if (count($group_nids) > 0) {
		$query = "SELECT DISTINCT {pi_inquiry}.nid FROM {pi_inquiry} LEFT JOIN {node} ON {node}.vid={pi_inquiry}.vid WHERE ({pi_inquiry}.participants_selection='group' OR {pi_inquiry}.participants_selection='justme') AND {pi_inquiry}.actor_gid IN (" . db_placeholders($group_nids) . ")";
		$result = db_query($query, $group_nids);
		while ($row = db_fetch_array($result)) {
			$inquiry_nids[] = $row['nid'];
		}
	}
	return $inquiry_nids;
}

function pi_inquiry_groupings_get_inquiries_for_anyone() {
	$query = "SELECT DISTINCT {pi_inquiry}.nid FROM {pi_inquiry} LEFT JOIN {node} ON {node}.vid={pi_inquiry}.vid WHERE {pi_inquiry}.participants_selection='anyone'";
	$result = db_query($query);
	$inquiry_nids = array();
	while ($row = db_fetch_array($result)) {
		$inquiry_nids[] = $row['nid'];
	}
	return $inquiry_nids;
}

function pi_inquiry_groupings_get_inquiries_for_user($uid) {
	$inquiry_groups = pi_inquiry_groupings_get_groups_for_user($uid, NQUIRE_GROUP_TYPE_INQUIRY);
	$joined_inquiries = pi_inquiry_groupings_get_inquiries_for_groups($inquiry_groups['active']);
	$awaiting_inquiries = pi_inquiry_groupings_get_inquiries_for_groups($inquiry_groups['inactive']);

	$user_groups = pi_inquiry_groupings_get_groups_for_user($uid, NQUIRE_GROUP_TYPE_NORMAL);
	$available_inquiries = pi_inquiry_groupings_get_inquiries_for_groups($user_groups['active']);
	$available_inquiries += pi_inquiry_groupings_get_inquiries_for_anyone();

	$output = array(
			'joined' => $joined_inquiries,
			'awaiting' => $awaiting_inquiries,
			'available' => array(),
	);

	foreach ($available_inquiries as $nid) {
		if (!in_array($nid, $joined_inquiries) && !in_array($nid, $awaiting_inquiries) && pi_inquiry_groupings_get_join_mode_for_inquiry_nid($nid) != OG_INVITE_ONLY) {
			$output['available'][] = $nid;
		}
	}

	return $output;
}

function pi_inquiry_groupings_get_inquiry_roles($inquiry_node) {
	return nquire_commons_decode_data($inquiry_node->roles);
}

function pi_inquiry_groupings_get_inquiry_role_names($inquiry_node) {
	$roles = pi_inquiry_groupings_get_inquiry_roles($inquiry_node);
	$names = array();
	foreach ($roles as $role) {
		$names[$role['id']] = check_plain($role['title']);
	}
	return $names;
}

function pi_inquiry_groupings_get_inquiry_role_name($inquiry_node, $role_id) {
	$roles = pi_inquiry_groupings_get_inquiry_roles($inquiry_node);
	foreach ($roles as $role) {
		if ($role['id'] == $role_id) {
			return $role['title'];
		}
	}
	return FALSE;
}

function pi_inquiry_groupings_get_user_subgroup($inquiry_node, $uid) {
	$query = "SELECT group_node.node_nid FROM (SELECT node.nid AS node_nid, nquire_group.parent, nquire_group.group_type FROM node LEFT JOIN nquire_group ON node.vid=nquire_group.vid WHERE group_type=%d AND parent=%d) AS group_node "
					. "LEFT JOIN nquire_group_participant ON nquire_group_participant.nid=group_node.node_nid "
					. "WHERE nquire_group_participant.uid=%d AND nquire_group_participant.active=1";

	$row = db_fetch_array(db_query($query, NQUIRE_GROUP_TYPE_SUBGROUP, $inquiry_node->actor_gid, $uid));
	return $row ? $row['node_nid'] : FALSE;
}

function pi_inquiry_groupings_get_user_awaiting_subgroups($inquiry_node, $uid) {
	$query = "SELECT group_node.node_nid FROM (SELECT node.nid AS node_nid, nquire_group.parent, nquire_group.group_type FROM node LEFT JOIN nquire_group ON node.vid=nquire_group.vid WHERE group_type=%d AND parent=%d) AS group_node "
					. "LEFT JOIN nquire_group_participant ON nquire_group_participant.nid=group_node.node_nid "
					. "WHERE nquire_group_participant.uid=%d AND nquire_group_participant.active=0";

	$gids = array();
	$result = db_query($query, NQUIRE_GROUP_TYPE_SUBGROUP, $inquiry_node->actor_gid, $uid);
	while ($row = db_fetch_array($result)) {
		$gids[] = $row['node_nid'];
	}
	return $gids;
}

function pi_inquiry_groupings_get_user_anystate_subgroups($inquiry_node, $uid) {
	$query = "SELECT group_node.node_nid FROM (SELECT node.nid AS node_nid, nquire_group.parent, nquire_group.group_type FROM node LEFT JOIN nquire_group ON node.vid=nquire_group.vid WHERE group_type=%d AND parent=%d) AS group_node "
					. "LEFT JOIN nquire_group_participant ON nquire_group_participant.nid=group_node.node_nid "
					. "WHERE nquire_group_participant.uid=%d";

	$gids = array();
	$result = db_query($query, NQUIRE_GROUP_TYPE_SUBGROUP, $inquiry_node->actor_gid, $uid);
	while ($row = db_fetch_array($result)) {
		$gids[] = $row['node_nid'];
	}
	return $gids;
}

function pi_inquiry_groupings_get_users_without_subgroup($inquiry_node) {
	/* TODO clean this */
	$users = nquire_group_get_member_uids($inquiry_node->actor_gid);
	$filtered = array_filter($users, function($uid) use ($inquiry_node) {
						return pi_inquiry_groupings_get_user_subgroup($inquiry_node, $uid) === FALSE;
					});

	return $filtered;
}

function pi_inquiry_groupings_subgroup_with_name($inquiry_node, $name) {
	$query = "SELECT nquire_group.nid AS nid FROM (SELECT vid FROM {node} WHERE title='%s') AS node_vids "
					. "LEFT JOIN nquire_group ON {node_vids}.vid={nquire_group}.vid "
					. "WHERE nquire_group.group_type=%d AND parent=%d";

	$row = db_fetch_array(db_query($query, $name, NQUIRE_GROUP_TYPE_SUBGROUP, $inquiry_node->actor_gid));
	return $row ? $row['nid'] : FALSE;
}

function pi_inquiry_groupings_subgroups($inquiry_node) {
	$query = "SELECT {nquire_group}.nid FROM {node} LEFT JOIN {nquire_group} ON {node}.vid={nquire_group}.vid WHERE group_type=%d AND parent=%d";

	$result = db_query($query, NQUIRE_GROUP_TYPE_SUBGROUP, $inquiry_node->actor_gid);
	$groups = array();
	while ($row = db_fetch_array($result)) {
		$group = node_load($row['nid']);
		og_load_group($group);
		$groups[] = $group;
	}
	return $groups;
}

function pi_inquiry_groupings_create_inquiry_subgroup($inquiry_nid, $owner, $title, $subscribe_owner) {
	$inquiry = node_load($inquiry_nid);
	if ($inquiry) {
		$nid = nquire_group_create_group($owner, $title, $subscribe_owner, $inquiry->actor_gid);
		nquire_group_set_join_mode($nid, OG_INVITE_ONLY);

		if ($subscribe_owner) {
			$awaiting_gids = pi_inquiry_groupings_get_user_awaiting_subgroups($inquiry, $owner);
			foreach ($awaiting_gids as $gid) {
				nquire_group_delete_user_from_group($gid, $owner);
			}
		}
		return $nid;
	} else {
		return FALSE;
	}
}

function pi_inquiry_groupings_add_user_to_group($group_check, $uid, $active) {
	nquire_group_add_user_to_group($group_check['gid'], $uid, $active);
	if ($active && $group_check['type'] === 'inquiry' && $group_check['inquiry_node']->group_creation === 'normal') {
		$user = user_load($uid);
		$title = t('@name group', array('@name' => $user->name));
		pi_inquiry_groupings_create_inquiry_subgroup($group_check['inquiry_node']->nid, $uid, $title, TRUE);
	}
}

function pi_inquiry_groupings_remove_user_from_group($group_check, $uid) {
	if ($group_check['type'] === 'inquiry') {
		$gids = pi_inquiry_groupings_get_user_anystate_subgroups($group_check['inquiry_node'], $uid);
		foreach($gids as $gid) {
			nquire_group_delete_user_from_group($gid, $uid);
		}
	}

	nquire_group_delete_user_from_group($group_check['gid'], $uid);
}

function pi_inquiry_groupings_get_access_data() {
	static $access_data = NULL;

	if (!$access_data) {
		include_once 'pi_inquiry_groupings.access.inc';
		$access_data = new PiInquiryGroupingAccess();
	}

	return $access_data;
}
