<?php

// $Id: pi_inquiry.install,v 0.1 $

/**
 * Implementation of hook_install(): creates the database table for pi_inquiry
 */
function pi_inquiry_install() {
  // Create tables.
  drupal_install_schema('pi_inquiry');
  //Options are status, promote, sticky, revision
  variable_set("node_options_pi_inquiry", array('status'));
  variable_set("comment_pi_inquiry", COMMENT_NODE_DISABLED);
  variable_set('upload_pi_inquiry', 0);
}

/**
 * Implementation of hook_uninstall(): removes the pi_inquiry table
 */
function pi_inquiry_uninstall() {
  // Remove tables.
  drupal_uninstall_schema('pi_inquiry');
  //Options are status, promote, sticky, revision
  variable_del("node_options_pi_inquiry");
  variable_del("comment_pi_inquiry");
  variable_del('upload_pi_inquiry');
}

/**
 * Implementation of hook_schema(): Describes the pi_inquiry table
 */
function pi_inquiry_schema() {

  $schema = array();

  $schema['pi_inquiry'] = array(
      'description' => 'PI Inquiry',
      'fields' => array(
          'nid' => array(
              'description' => 'node id',
              'type' => 'int',
              'size' => 'normal',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'default' => 0),
          'vid' => array(
              'description' => 'The current vid version identifier',
              'type' => 'int',
              'size' => 'normal',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'default' => 0),
          'layout' => array(
              'description' => 'Preferred Inquiry phase layout',
              'type' => 'varchar',
              'length' => 20,
              'not null' => TRUE,
              'default' => 'list'),
          'roles' => array(
              'description' => 'Role information',
              'type' => 'text',
              'size' => 'normal'),
          'participants_selection' => array(
              'type' => 'text',
              'size' => 'small',
              'description' => 'Type of participant selection (justme/group/anyone)'),
          'participants_cohort' => array(
              'type' => 'int',
              'size' => 'normal',
              'unsigned' => TRUE,
              'not null' => FALSE,
              'default' => NULL,
              'description' => 'Participants selection group (expect for anyone)'),
          'actor_gid' => array(
              'type' => 'int',
              'size' => 'normal',
              'unsigned' => TRUE,
              'not null' => FALSE,
              'default' => NULL,
              'description' => 'The inquiry actor group id'),
          'weight' => array(
              'description' => 'The default layout order in the inquiry list.',
              'type' => 'int',
              'size' => 'normal',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'default' => 0)),
      'primary key' => array('nid', 'vid'),
      'unique keys' => array('vid' => array('vid')),
      'indexes' => array('nid' => array('nid'))
  );

  $schema['pi_inquiry_grouping'] = array(
      'description' => 'PI Inquiry grouping.',
      'fields' => array(
          'pig_id' => array(
              'type' => 'serial',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'description' => 'Primary Key: Unique category ID.'),
          'inquiry_id' => array(
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'description' => 'Inquiry id'),
          'stage_id' => array(
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => FALSE,
              'default' => NULL,
              'description' => 'Stage id'),
          'phase_id' => array(
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => FALSE,
              'default' => NULL,
              'description' => 'Phase id.'),
          'activity_id' => array(
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => FALSE,
              'description' => 'Activity id.'),
          'grouping_id' => array(
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'default' => NULL,
              'description' => 'Grouping id used in a specified inquiry, stage, phase and/or activity')),
      'primary key' => array('pig_id'),
      'indexes' => array('inquiry_id' => array('inquiry_id'),
          'stage_id' => array('stage_id'),
          'phase_id' => array('phase_id'),
          'activity_id' => array('activity_id'))
  );

  $schema['pi_inquiry_phase'] = array(
      'description' => 'PI Inquiry phase.',
      'fields' => array(
          'pip_id' => array(
              'type' => 'serial',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'description' => 'Primary Key: Unique category ID.'),
          'inquiry_id' => array(
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'description' => 'Inquiry id'),
          'phase_id' => array(
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'default' => NULL,
              'description' => 'Stage id'),
          'position' => array(
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'default' => 0,
              'description' => 'Phase id.')),
      'primary key' => array('pip_id'),
      'indexes' => array('inquiry_id' => array('inquiry_id')),
  );

  $schema['pi_inquiry_stage'] = array(
      'description' => 'PI Inquiry stage.',
      'fields' => array(
          'pis_id' => array(
              'type' => 'serial',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'description' => 'Primary Key: Unique category ID.'),
          'inquiry_id' => array(
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'description' => 'Inquiry id'),
          'stage_id' => array(
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'description' => 'Stage id'),
          'position' => array(
              'type' => 'int',
              'size' => 'tiny',
              'unsigned' => TRUE,
              'not null' => FALSE,
              'default' => 0,
              'description' => 'Phase id.')),
      'primary key' => array('pis_id'),
      'indexes' => array('inquiry_id' => array('inquiry_id')),
  );

  $schema['pi_current_inquiry'] = array(
      'description' => 'PI current inquiry',
      'fields' => array(
          'pci_id' => array(
              'type' => 'serial',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'description' => 'Primary Key: Unique category ID'),
          'sid' => array(
              'type' => 'varchar',
              'length' => 255,
              'not null' => TRUE,
              'description' => 'Session id'),
          'uid' => array(
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => TRUE,
              'default' => NULL,
              'description' => 'user id'),
          'inquiry_id' => array(
              'type' => 'int',
              'unsigned' => TRUE,
              'not null' => FALSE,
              'description' => 'inquiry id')),
      'primary key' => array('pci_id'),
      'indexes' => array('inquiry_id' => array('inquiry_id'),
          'sid' => array('sid'),
          'uid' => array('uid'))
  );


  return $schema;
}

/**
 * Update to roll inquiry actor into the same table as pi_inquiry
 */
function pi_inquiry_update_6000() {
  //Get the new schema definition and make sure cache is updated
  $return_value = null;
  $schema = pi_inquiry_schema();
  db_add_field($return_value, 'pi_inquiry', 'actor_gid', $schema['pi_inquiry']['fields']['actor_gid']);
  //rebuild the schema cache after the change
  $new_schema = drupal_get_schema('pi_inquiry', true);
  $query = "SELECT * FROM {pi_inquiry_actor} ORDER BY 'inquiry_id'";
  $result = db_query($query);
  while ($actor = db_fetch_array($result)) {
    $inquiry = node_load($actor['inquiry_id']);
    //pi_debug_message($actor);
    if ($inquiry && ($actor['gid'] != null)) {
      if ($inquiry->type == 'pi_inquiry') {
        $inquiry->actor_gid = $actor['gid'];
        //pi_debug_message($inquiry);
        node_save($inquiry);
      } else {
        drupal_set_message(t(
                        'Inquiry actor %pia, was a %type, not an Inquiry - not upgraded.', array('%pia' => $actor['pia_id'], '%type' => $inquiry->type)));
      }
    } else {
      if ($inquiry == false) {
        drupal_set_message(t('Inquiry actor %pia, did not reference an existing node - not upgraded.', array('%pia' => $actor['pia_id'])));
      }
      if ($actor['gid'] != null) {
        drupal_set_message(t('Inquiry actor %pia, did not reference a group - not upgraded.', array('%pia' => $actor['pia_id'])));
      }
    }
  }
  db_drop_table($return_value, 'pi_inquiry_actor');
  return $return_value;
}

